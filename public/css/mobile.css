/*mobile folder*/
@media screen and (max-width: 1020px) {
	.content {
		padding : 0 15px;
	}
	.main-content {
		width : calc(100% - 240px);
	}
}
@media screen and (max-width: 768px) {
	.main-content {
		width : 100%;
	}
	.biggest-title {
		font-size : 36px;
	}
	.big-title {
		font-size : 28px;
	}
}
@media screen and (max-width: 620px) {
	.content {
		padding : 0 10px;
	}
}
@media screen and (max-width: 420px) {
	.biggest-title {
		font-size : 28px;
	}
	.big-title {
		font-size : 22px;
	}
}
@media screen and (max-width: 1020px) {
	.footer {
		padding : 0 15px;
	}
	.footer__soc {
		max-width : 190px;
	}
	.sub-nav {
		padding-left : 0;
	}
}
@media screen and (max-width: 920px) {
	.footer__wrapper {
		-ms-flex-wrap : wrap;
		    flex-wrap : wrap;
	}
	.footer__soc {
		margin-top : 25px;
	}
	.footer__rating {
		margin-top : 25px;
	}
	.sub-nav {
		display : -ms-flexbox;
		display : flex;
		-ms-flex-wrap : wrap;
		    flex-wrap : wrap;
		-ms-flex-pack : justify;
		justify-content : space-between;
		-ms-flex-order : -1;
		order : -1;
		width : 45%;
	}
	.sub-nav:nth-child(3) {
		text-align : right;
	}
	.sub-nav__item {
		box-sizing : border-box;
		width : 100%;
	}
	.sub-nav__item:nth-child(n) {
		margin-top : 10px;
	}
}
@media screen and (max-width: 620px) {
	.footer {
		padding : 0 10px;
	}
}
@media screen and (max-width: 430px) {
	.footer__soc {
		width : 100%;
		text-align : center;
		max-width : initial;
	}
	.footer__rating-col {
		width : 100%;
	}
	.rating {
		text-align : center;
	}
}
@media screen and (max-width: 1020px) {
	.header {
		padding : 20px 15px 0;
	}
	.central-navigation {
		max-width : 45%;
	}
	.central-navigation__top-list-wrap {
		display : -ms-flexbox;
		display : flex;
		-ms-flex-pack : center;
		justify-content : center;
	}
	.central-navigation__nav-list {
		padding-right : 0;
	}
	.authorized-list {
		max-width : 100%;
	}
	.authorized-list__item--adverts {
		display : none;
	}
	.authorized-list__item--balance {
		display : none;
	}
}
@media screen and (max-width: 768px) {
	.search-panel {
		background-position : 12px 78px;
	}
	.search-panel__filters-wrap {
		padding : 0 35px;
		-ms-flex-wrap : wrap;
		    flex-wrap : wrap;
		-ms-flex-pack : justify;
		justify-content : space-between;
	}
	.search-panel__input-wrap {
		width : calc(100% - 97px);
		max-width : initial;
		margin : 10px 0 0;
		-ms-flex-order : 1;
		order : 1;
	}
	.search-panel__select-wrap {
		width : calc(50% - 5px);
		max-width : initial;
		margin-left : 0;
	}
	.search-panel__btn-wrap {
		width : 87px;
		margin : 10px 0 0;
		text-align : right;
		-ms-flex-order : 2;
		order : 2;
		-ms-flex-positive : 0;
		flex-grow : 0;
	}
	.search-panel .input ,
	.search-panel .select-button {
		width : 100% !important;
	}
}
@media screen and (max-width: 730px) {
	.main-nav {
		-ms-flex-wrap : wrap;
		    flex-wrap : wrap;
	}
	.main-nav__central-navigation {
		-ms-flex-order : 1;
		order : 1;
	}
	.central-navigation {
		max-width : 100%;
		width : 100%;
	}
	.central-navigation__top-list-wrap {
		margin-top : 20px;
	}
	.central-navigation__bottom-list-wrap--authorized {
		margin-top : 20px;
	}
}
@media screen and (max-width: 620px) {
	.header {
		padding : 20px 10px 0;
	}
}
@media screen and (max-width: 500px) {
	.search-panel {
		background : #efe3b4;
	}
	.search-panel__filters-wrap {
		padding : 0 15px;
	}
	.search-panel__select-wrap {
		width : 100%;
	}
	.search-panel__select-wrap:nth-child(3) {
		margin-top : 10px;
	}
}
@media screen and (max-width: 420px) {
	.search-panel__input-wrap {
		width : calc(100% - 70px);
	}
	.search-panel__btn-wrap {
		width : 60px;
	}
	.central-navigation__nav-item:nth-child(n+2) {
		margin-left : 10px;
	}
}
@media screen and (max-width: 370px) {
	.main-nav__home-link {
		display : block;
	}
	.main-nav__logo-img {
		width : 103px;
		height : 15.67391px;
	}
	.main-nav__logo-wrap {
		margin-top : 0;
	}
	.main-nav__add-advert-wrap {
		margin-top : 0;
	}
	.main-nav__text-below-logo {
		margin-top : 5px;
	}
	.main-nav__advert-count {
		margin-top : 9px;
	}
	.main-nav__add-link-wrap {
		font-size : 14px;
	}
	.main-nav__add-link::before {
		background-size : cover;
		height : 19px;
		width : 17px;
		left : -20px;
	}
	.central-navigation__top-nav-list {
		padding-right : 20px;
	}
	.central-navigation__nav-item {
		padding-bottom : 0;
	}
	.central-navigation__nav-link {
		font-size : 16px;
	}
}
@media screen and (max-width: 870px) {
	.declarations-division__item {
		width : 50%;
	}
}
@media screen and (max-width: 768px) {
	.main__title {
		padding-right : 0;
		font-size : 36px;
	}
	.main__title-first-letter:after {
		top : -10px;
		left : -5px;
	}
	.declarations-division__main-title {
		font-size : 28px;
	}
	.declarations-division__item {
		width : 33.3333%;
	}
	.category-nav {
		padding : 5px 5px 20px;
	}
	.category-nav__link {
		font-size : 14px;
	}
}
@media screen and (max-width: 620px) {
	.declarations-division__item {
		width : 50%;
	}
}
@media screen and (max-width: 420px) {
	.main__title {
		font-size : 28px;
	}
	.main__title-first-letter:after {
		top : -11px;
		left : -8px;
	}
	.main__category-nav {
		margin-top : 35px;
	}
	.declarations-division__main-title {
		font-size : 22px;
	}
	.declarations-division__title {
		margin-top : 20px;
	}
	.declarations-division__list {
		-ms-flex-pack : justify;
		justify-content : space-between;
	}
	.declarations-division__item {
		width : 45%;
		font-size : 14px;
	}
}
@media screen and (max-width: 768px) {
	.hot-carousel__title {
		padding-bottom : 0;
		font-size : 28px;
	}
	.hot-carousel__link-wrap {
		padding-bottom : 0;
	}
}
@media screen and (max-width: 620px) {
	.hot-carousel__top {
		-ms-flex-wrap : wrap;
		    flex-wrap : wrap;
	}
	.hot-carousel__title {
		width : 100%;
	}
	.hot-carousel__link-wrap {
		margin-left : 0;
	}
}
@media screen and (max-width: 420px) {
	.hot-carousel__title {
		padding-bottom : 10px;
		font-size : 22px;
	}
	.hot-carousel__btn {
		width : 30px;
		height : 30px;
	}
}
@media screen and (max-width: 768px) {
	.news__title {
		font-size : 36px;
	}
	.news__title--main-page {
		font-size : 28px;
	}
	.news__item--big .news__img-wrapper {
		max-width : none;
	}
	.news__img-wrapper {
		max-width : 140px;
	}
}
@media screen and (max-width: 490px) {
	.news__item {
		-ms-flex-direction : column;
		    flex-direction : column;
	}
	.news__item--big .news__item-title {
		margin-top : 0;
		font-size : 20px;
	}
	.news__img-wrapper {
		max-width : none;
	}
	.news__info-wrapper {
		margin : 15px 0 0;
	}
}
@media screen and (max-width: 420px) {
	.news__title {
		font-size : 28px;
	}
	.news__title--main-page {
		font-size : 22px;
	}
	.news__item {
		-ms-flex-direction : column;
		    flex-direction : column;
	}
	.news__img-wrapper {
		max-width : none;
	}
	.news__info-wrapper {
		margin : 15px 0 0;
	}
}
@media screen and (max-width: 1020px) {
	.aside {
		width : 220px;
		margin-left : 20px;
	}
}
@media screen and (max-width: 768px) {
	.aside {
		display : none;
	}
}
@media screen and (max-width: 768px) {
	.publication__title {
		font-size : 28px;
	}
}
@media screen and (max-width: 420px) {
	.publication__title {
		font-size : 22px;
	}
}
@media screen and (max-width: 1020px) {
	.declarations-top__subscriptions-wrap {
		display : none;
	}
}
@media screen and (max-width: 900px) {
	.declarations__display-view {
		display : none;
	}
}
@media screen and (max-width: 870px) {
	.declaration__title {
		font-size : 14px;
		line-height : 1.3;
	}
}
@media screen and (max-width: 768px) {
	.declarations-top__title {
		font-size : 28px;
	}
}
@media screen and (max-width: 540px) {
	.declaration--tile {
		width : calc(50% - 7px);
		max-width : initial;
	}
}
@media screen and (max-width: 420px) {
	.declarations-top__title {
		font-size : 22px;
	}
}
@media screen and (max-width: 400px) {
	.declarations-list--tile {
		-ms-flex-pack : center;
		justify-content : center;
	}
	.declaration--tile {
		width : 100%;
		max-width : 260px;
	}
}
@media screen and (max-width: 840px) {
	.obyavlenie-control__link {
		font-size : 12px;
	}
}
@media screen and (max-width: 768px) {
	.obyavlenie__name {
		font-size : 28px;
	}
	.obyavlenie-control {
		position : relative;
		padding-bottom : 10px;
	}
	.obyavlenie-control__item:nth-last-child(n+2) {
		display : none;
	}
	.obyavlenie-control__item:last-child {
		display : block;
	}
	.obyavlenie-control__hamburger {
		display : block;
		top : 3px;
	}
	.obyavlenie-control__action-list {
		display : block;
	}
	.obyavlenie-control__link {
		font-size : 16px;
	}
	.obyavlenie-control__link::before {
		margin-right : 5px;
	}
	.about-info {
		padding : 0 0 15px 15px;
	}
	.about-info__item {
		margin-top : 20px;
	}
}
@media screen and (max-width: 520px) {
	.about-info__item {
		width : calc(50% - 15px);
	}
}
@media screen and (max-width: 420px) {
	.obyavlenie__name {
		font-size : 22px;
	}
	.obyavlenie__favourite {
		width : 22px;
		height : 20px;
	}
	.about-info {
		padding-left : 10px;
	}
	.about-info__item {
		width : calc(50% - 10px);
		margin-right : 10px;
	}
}
@media screen and (max-width: 768px) {
	.dialogs-item__title {
		font-size : 14px;
	}
	.dialogs-item__message-count {
		font-size : 12px;
	}
	.dialogs-item__new-message-count {
		padding : 3px 5px;
		font-size : 10px;
	}
}
@media screen and (max-width: 420px) {
	.dialogs__kind-btn {
		display : none;
	}
	.dialogs__select-wrap {
		display : block;
	}
}
@media screen and (max-width: 560px) {
	.dialog__top {
		-ms-flex-direction : column-reverse;
		    flex-direction : column-reverse;
	}
	.dialog__left {
		margin-top : 15px;
	}
}
@media screen and (max-width: 768px) {
	.chat {
		padding : 15px 5px 15px 10px;
	}
	.chat__wrapper {
		padding-right : 15px;
		padding-left : 10px;
	}
	.chat__text-wrap {
		width : 60%;
		padding : 10px 15px;
	}
	.chat__text {
		font-size : 14px;
	}
}
@media screen and (max-width: 580px) {
	.chat__text-wrap {
		width : 80%;
	}
}
@media screen and (max-width: 1020px) {
	.my-dec-item {
		-ms-flex-wrap : wrap;
		    flex-wrap : wrap;
	}
	.my-dec-item__services-col {
		width : 100%;
		box-sizing : border-box;
		background : linear-gradient(to top, #cccccc 4px, transparent 6px);
		background-position : 0 0;
		background-size : 10px 1px;
		background-repeat : repeat-x;
	}
	.my-dec-item__left-col {
		-ms-flex-positive : 1.5;
		flex-grow : 1.5;
	}
	.my-dec-item__services-list {
		-ms-flex-negative : 1;
		flex-shrink : 1;
		display : -ms-flexbox;
		display : flex;
		-ms-flex-wrap : wrap;
		    flex-wrap : wrap;
	}
	.my-dec-item__services-item {
		width : 25%;
	}
}
@media screen and (max-width: 950px) {
	.my-declarations__info-wrap {
		-ms-flex-wrap : wrap;
		    flex-wrap : wrap;
	}
	.my-declarations__select-count-wrap {
		width : 100%;
	}
	.my-declarations__info-text {
		width : 100%;
		margin : 5px 0 0;
	}
	.my-declarations__button:nth-child(n) {
		margin : 10px 10px 0 0;
	}
}
@media screen and (max-width: 930px) {
	.my-dec-item__services-item {
		width : 33%;
	}
}
@media screen and (max-width: 880px) {
	.my-declarations__filter-wrap {
		-ms-flex-direction : column;
		    flex-direction : column;
	}
	.my-declarations__favour-clear {
		margin-top : 15px;
	}
	.my-declarations__search {
		margin-top : 15px;
	}
	.my-declarations__search-input {
		max-width : 230px;
	}
	.my-declarations__list {
		margin-top : 15px;
	}
}
@media screen and (max-width: 770px) {
	.my-declarations__info-wrap {
		padding : 10px;
	}
	.my-dec-item {
		-ms-flex-direction : column;
		    flex-direction : column;
	}
	.my-dec-item__check-col {
		padding : 15px 15px 5px 10px;
	}
	.my-dec-item__row-top {
		padding : 10px 0;
	}
	.my-dec-item__img-wrap {
		width : 100px;
	}
	.my-dec-item__title-wrap {
		font-size : 14px;
	}
	.my-dec-item__data-wrap {
		margin-left : 15px;
	}
	.my-dec-item__text-row:nth-child(2) {
		margin-top : 10px;
	}
	.my-dec-item__price-col {
		padding-right : 10px;
	}
	.my-dec-item__info-col {
		padding-left : 10px;
	}
	.my-dec-item__services-col {
		padding : 12px 10px;
	}
}
@media screen and (max-width: 730px) {
	.my-dec-item__services-item {
		width : 50%;
	}
	.auto-up {
		padding : 15px;
	}
}
@media screen and (max-width: 685px) {
	.auto-up__top-row {
		-ms-flex-direction : column;
		    flex-direction : column;
	}
	.auto-up__text {
		margin : 5px 0 0;
	}
	.auto-up__bottom-row {
		-ms-flex-wrap : wrap;
		    flex-wrap : wrap;
	}
	.auto-up__time-wrap {
		width : 100%;
		margin : 15px 0 0;
	}
	.auto-up__button {
		margin : 15px 0 0;
	}
}
@media screen and (max-width: 650px) {
	.my-dec-item__info-col {
		padding-right : 10px;
		-ms-flex-direction : row;
		    flex-direction : row;
	}
	.my-dec-item__inline-price {
		display : inline;
	}
	.my-dec-item__price-col {
		display : none;
	}
	.my-dec-item__title {
		margin-right : 10px;
	}
	.my-dec-item__row-actions {
		display : none;
		position : absolute;
		-ms-flex-direction : column;
		    flex-direction : column;
		top : 47px;
		right : 10px;
		padding : 5px 0 2px;
		background-color : #e9edf1;
		border-top-left-radius : 3px;
		border-bottom-left-radius : 3px;
		border-bottom-right-radius : 3px;
		/*&.is-open{
        display: flex;
      }*/
	}
	.my-dec-item__row-actions.overlay {
		position : absolute;
	}
	.my-dec-item__action {
		padding : 7px 15px;
	}
	.my-dec-item__action:nth-child(n) {
		border : none;
	}
	.my-dec-item__action:nth-last-child(n+2) {
		background : linear-gradient(to top, #cccccc 4px, transparent 6px);
		background-position : 10px 100%;
		background-size : calc(100% - 20px) 1px;
		background-repeat : no-repeat;
	}
	.my-dec-item__hamburger {
		display : block;
	}
	.auto-up {
		z-index : 3;
	}
}
@media screen and (max-width: 575px) {
	.my-declarations__filter {
		-ms-flex-direction : column;
		    flex-direction : column;
	}
	.my-declarations__radio-buttons {
		margin : 10px 0 0;
	}
	.my-dec-item__img-wrap {
		width : 150px;
	}
	.my-dec-item__data-wrap {
		margin : 10px 0 0;
	}
	.my-dec-item__left-col {
		-ms-flex-direction : column;
		    flex-direction : column;
	}
}
@media screen and (max-width: 470px) {
	.my-dec-item__services-item {
		width : 100%;
	}
}
@media screen and (max-width: 430px) {
	.radio-buttons__item + .radio-buttons__item {
		margin-left : 5px;
	}
}
@media screen and (max-width: 420px) {
	.my-declarations__filter {
		-ms-flex-direction : row;
		    flex-direction : row;
	}
	.my-declarations__select-wrap {
		display : block;
		margin-left : 10px;
	}
	.my-dec-item__active-dates {
		display : block;
		margin-left : 0;
	}
	.my-dec-item__stat {
		display : block;
	}
	.my-dec-item__stat:nth-child(n) {
		margin-left : 0;
	}
	.radio-buttons {
		display : none;
	}
}
@media screen and (max-width: 590px) {
	.balance__hide-mb {
		display : none;
	}
	.balance__title-wrap--num {
		min-width : 60px;
	}
	.balance__title-wrap--sum {
		min-width : 70px;
	}
	.balance__col--num {
		min-width : 60px;
	}
	.balance__col--sum {
		min-width : 70px;
	}
}
@media screen and (max-width: 768px) {
	.settings__nav {
		-ms-flex-direction : column;
		    flex-direction : column;
		-ms-flex-wrap : wrap;
		    flex-wrap : wrap;
		-ms-flex-line-pack : start;
		align-content : flex-start;
		height : 80px;
	}
	.settings__nav-item {
		width : 33%;
		margin-bottom : 5px;
	}
	.settings__nav-item:nth-child(n+2) {
		margin-left : 0;
	}
}
@media screen and (max-width: 520px) {
	.settings__nav {
		height : 80px;
	}
	.settings__nav-item {
		width : 50%;
		font-size : 14px;
	}
}
@media screen and (max-width: 768px) {
	.comments__title {
		font-size : 28px;
	}
	.comment__name {
		font-size : 14px;
	}
	.comment__text {
		font-size : 14px;
	}
}
@media screen and (max-width: 580px) {
	.add-message__bottom-wrap {
		-ms-flex-direction : column;
		    flex-direction : column;
		-ms-flex-align : start;
		align-items : flex-start;
	}
	.add-message__info-text {
		max-width : none;
	}
	.add-message__button-wrap {
		-ms-flex-item-align : end;
		align-self : flex-end;
		margin-top : 15px;
	}
}
@media screen and (max-width: 420px) {
	.comments__title {
		font-size : 22px;
	}
	.comments__authorization-text {
		text-align : center;
	}
	.add-message {
		padding : 10px 10px 15px;
	}
}
@media screen and (max-width: 1020px) {
	.lk-header {
		padding : 30px 15px 0;
	}
}
@media screen and (max-width: 940px) {
	.lk-header__info {
		-ms-flex-direction : column;
		    flex-direction : column;
		-ms-flex-align : start;
		align-items : flex-start;
	}
	.lk-header__balance-wrap {
		margin-top : 15px;
		width : 280px;
	}
	.lk-header__balance-text {
		margin-right : 25px;
	}
}
@media screen and (max-width: 768px) {
	.lk-header__title {
		font-size : 32px;
	}
	.lk-header__nav-list {
		overflow : auto;
		overflow-y : hidden;
		-webkit-overflow-scrolling : touch;
	}
	.lk-header__nav-item {
		font-size : 14px;
	}
	.lk-header__nav-link {
		padding : 10px;
	}
	.lk-header__nav-balance {
		font-size : 14px;
	}
	.lk__title {
		font-size : 28px;
	}
}
@media screen and (max-width: 620px) {
	.lk-header {
		padding : 30px 10px 0;
	}
}
@media screen and (max-width: 520px) {
	.lk__title-wrap {
		-ms-flex-direction : column;
		    flex-direction : column;
	}
	.lk__info-link-wrap {
		margin-top : 10px;
	}
	.banners__top {
		-ms-flex-direction : column;
		    flex-direction : column;
		-ms-flex-align : start;
		align-items : flex-start;
	}
	.banners__btn-wrap {
		margin-top : 10px;
	}
}
@media screen and (max-width: 420px) {
	.lk-header__title {
		font-size : 26px;
	}
	.lk__title {
		font-size : 22px;
	}
}
@media screen and (max-width: 590px) {
	.image-download-box__list-item:nth-child(n) {
		margin : 0;
	}
	.image-download-box__list-item:nth-child(2n+2) {
		margin-left : 10px;
	}
	.image-download-box__list-item:nth-last-child(n+3) {
		margin-bottom : 10px;
	}
}
@media screen and (max-width: 350px) {
	.img-download__button {
		width : 135px;
		height : 90px;
	}
}
/*
@media screen and (max-width: 980px){
  .input-row{
    &__label{
      left: 0;
      top: -25px;
      text-align: left;
      max-width: 100%;
      width: auto;
    }
  }
}*/
@media screen and (max-width: 980px) {
	.input-row__wrap {
		-ms-flex-direction : column;
		    flex-direction : column;
	}
	.input-row__wrap--between {
		-ms-flex-direction : row;
		    flex-direction : row;
	}
	.input-row__name {
		display : block;
	}
	.input-row__label {
		position : static;
		text-align : left;
		max-width : 100%;
		width : auto;
		padding-bottom : 3px;
	}
	.input-row__warning-text {
		display : block;
		position : static;
		transform : none;
	}
	.input-row__clarification {
		position : static;
		transform : none;
		margin : 5px 0 0;
		min-height : 0;
	}
	.input-row__description {
		max-width : none;
	}
}
@media screen and (max-width: 700px) {
	.form-rows {
		margin-left : 10%;
		margin-right : 7%;
	}
	.form-rows--popup {
		margin-left : 0;
		margin-right : 0;
	}
}
@media screen and (max-width: 420px) {
	.form-rows {
		margin-left : 10px;
		margin-right : 10px;
	}
	.form-rows--popup {
		margin-left : 0;
		margin-right : 0;
	}
	.input {
		height : 30px;
		padding : 6px 10px;
		font-size : 14px;
	}
	.textarea {
		height : 140px;
		font-size : 14px;
	}
	.checkbox-btn__button {
		height : 30px;
		padding : 6px 10px;
		font-size : 14px;
	}
	.radio-switchers__button {
		height : 30px;
		padding : 6px 10px;
		font-size : 14px;
	}
	.checkbox__text {
		font-size : 14px;
	}
}
@media screen and (max-width: 420px) {
	.popup {
		padding-right : 10px;
		padding-left : 10px;
	}
}
@media screen and (max-width: 980px) {
	.form-rows__input-row:nth-child(n+2) {
		margin-top : 15px;
	}
	.form-rows__input-row--big-indent:nth-child(n) {
		margin-top : 25px;
	}
	.suc-input {
		height : 10px;
		top : 4px;
	}
}
@media screen and (max-width: 420px) {
	.add-advert__clarification {
		font-size : 14px;
	}
	.suc-input {
		left : -15px;
	}
}
@media screen and (max-width: 360px) {
	#rc-imageselect ,
	.g-recaptcha {
		transform : scale(0.91);
	}
}
@media screen and (max-width: 420px) {
	.select-button {
		height : 30px;
		padding : 6px 10px;
	}
	.select-button .ui-selectmenu-text {
		font-size : 14px;
	}
}
@media screen and (max-width: 420px) {
	.button {
		height : 30px;
		padding : 6px 10px;
		font-size : 14px;
	}
}
@media screen and (max-width: 768px) {
	.like-publications__name {
		font-size : 16px;
	}
	.like-publications__small-descr {
		margin-top : 10px;
	}
	.like-publications__tags-row {
		margin-top : 5px;
	}
}
@media screen and (max-width: 660px) {
	.like-publications__list {
		-ms-flex-pack : justify;
		justify-content : space-between;
	}
	.like-publications__item {
		width : 47%;
		margin-left : 0;
	}
	.like-publications__item:nth-child(n+3) {
		margin-top : 30px;
	}
}
@media screen and (max-width: 420px) {
	.like-publications__list {
		-ms-flex-pack : center;
		justify-content : center;
	}
	.like-publications__item {
		width : 100%;
		margin-left : 0;
	}
	.like-publications__item:nth-child(n+2) {
		margin-top : 30px;
	}
}
@media screen and (max-width: 768px) {
	.pagination {
		-ms-flex-direction : column;
		    flex-direction : column;
	}
	.pagination__nav {
		margin : 10px 0 0;
	}
	.pagination__link {
		font-size : 20px;
	}
	.pagination__link-delimiter {
		font-size : 20px;
	}
}
@media screen and (max-width: 420px) {
	.pagination__buttons-item:nth-child(n+2) {
		margin-left : 3px;
	}
	.pagination__button-link {
		height : 30px;
		width : 30px;
		padding : 8px 0;
		font-size : 12px;
	}
}
@media screen and (max-width: 1020px) {
	.breadcrumbs {
		padding : 20px 15px 0;
	}
}
@media screen and (max-width: 620px) {
	.breadcrumbs {
		padding : 20px 10px 0;
	}
}
.m-list {
	position : absolute;
	top : 39px;
	right : 10px;
	padding : 5px 0 2px;
	z-index : 1;
	font-size : 14px;
	background-color : #e9edf1;
	border-top-left-radius : 3px;
	border-bottom-left-radius : 3px;
	border-bottom-right-radius : 3px;
}
.m-list__item:nth-last-child(n+2) {
	background : linear-gradient(to top, #cccccc 4px, transparent 6px);
	background-position : 10px 100%;
	background-size : calc(100% - 20px) 1px;
	background-repeat : no-repeat;
}
.m-list__link {
	display : block;
	padding : 7px 15px;
	color : #0066cb;
	background : none;
}
.m-list__link:hover ,
.m-list__link:focus {
	background : none;
}
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
