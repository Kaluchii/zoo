/*mobile folder*/
@media screen and (max-width: 1020px) {
	.content {
		padding : 0 15px;
	}
	.main-content {
		width : calc(100% - 240px);
	}
}
@media screen and (max-width: 768px) {
	.main-content {
		width : 100%;
	}
	.biggest-title {
		font-size : 36px;
	}
	.big-title {
		font-size : 28px;
	}
}
@media screen and (max-width: 620px) {
	.content {
		padding : 0 10px;
	}
}
@media screen and (max-width: 420px) {
	.biggest-title {
		font-size : 28px;
	}
	.big-title {
		font-size : 22px;
	}
}
@media screen and (max-width: 1020px) {
	.footer {
		padding : 0 15px;
	}
	.footer__soc {
		max-width : 190px;
	}
	.sub-nav {
		padding-left : 0;
	}
}
@media screen and (max-width: 920px) {
	.footer__wrapper {
		-ms-flex-wrap : wrap;
		    flex-wrap : wrap;
	}
	.footer__soc {
		margin-top : 25px;
	}
	.footer__rating {
		margin-top : 25px;
	}
	.sub-nav {
		display : -ms-flexbox;
		display : flex;
		-ms-flex-wrap : wrap;
		    flex-wrap : wrap;
		-ms-flex-pack : justify;
		justify-content : space-between;
		-ms-flex-order : -1;
		order : -1;
		width : 45%;
	}
	.sub-nav:nth-child(3) {
		text-align : right;
	}
	.sub-nav__item {
		box-sizing : border-box;
		width : 100%;
	}
	.sub-nav__item:nth-child(n) {
		margin-top : 10px;
	}
}
@media screen and (max-width: 620px) {
	.footer {
		padding : 0 10px;
	}
}
@media screen and (max-width: 430px) {
	.footer__soc {
		width : 100%;
		text-align : center;
		max-width : initial;
	}
	.footer__rating-col {
		width : 100%;
	}
	.rating {
		text-align : center;
	}
}
@media screen and (max-width: 1020px) {
	.header {
		padding : 20px 15px 0;
	}
	.central-navigation {
		max-width : 45%;
	}
	.central-navigation__top-list-wrap {
		display : -ms-flexbox;
		display : flex;
		-ms-flex-pack : center;
		justify-content : center;
	}
	.central-navigation__nav-list {
		padding-right : 0;
	}
	.authorized-list {
		max-width : 100%;
	}
	.authorized-list__item--adverts {
		display : none;
	}
	.authorized-list__item--balance {
		display : none;
	}
}
@media screen and (max-width: 768px) {
	.search-panel {
		background-position : 12px 78px;
	}
	.search-panel__filters-wrap {
		padding : 0 35px;
		-ms-flex-wrap : wrap;
		    flex-wrap : wrap;
		-ms-flex-pack : justify;
		justify-content : space-between;
	}
	.search-panel__input-wrap {
		width : calc(100% - 97px);
		max-width : initial;
		margin : 10px 0 0;
		-ms-flex-order : 1;
		order : 1;
	}
	.search-panel__select-wrap {
		width : calc(50% - 5px);
		max-width : initial;
		margin-left : 0;
	}
	.search-panel__btn-wrap {
		width : 87px;
		margin : 10px 0 0;
		text-align : right;
		-ms-flex-order : 2;
		order : 2;
	}
	.search-panel .input ,
	.search-panel .select-button {
		width : 100% !important;
	}
}
@media screen and (max-width: 730px) {
	.main-nav {
		-ms-flex-wrap : wrap;
		    flex-wrap : wrap;
	}
	.main-nav__central-navigation {
		-ms-flex-order : 1;
		order : 1;
	}
	.central-navigation {
		max-width : 100%;
		width : 100%;
	}
	.central-navigation__top-list-wrap {
		margin-top : 20px;
	}
	.central-navigation__bottom-list-wrap--authorized {
		margin-top : 20px;
	}
}
@media screen and (max-width: 620px) {
	.header {
		padding : 20px 10px 0;
	}
}
@media screen and (max-width: 500px) {
	.search-panel {
		background : #efe3b4;
	}
	.search-panel__filters-wrap {
		padding : 0 15px;
	}
	.search-panel__select-wrap {
		width : 100%;
	}
	.search-panel__select-wrap:nth-child(3) {
		margin-top : 10px;
	}
}
@media screen and (max-width: 420px) {
	.central-navigation__nav-item:nth-child(n+2) {
		margin-left : 10px;
	}
}
@media screen and (max-width: 870px) {
	.declarations-division__item {
		width : 50%;
	}
}
@media screen and (max-width: 768px) {
	.main__title {
		padding-right : 0;
		font-size : 36px;
	}
	.main__title-first-letter:after {
		top : -10px;
		left : -5px;
	}
	.declarations-division__main-title {
		font-size : 28px;
	}
	.declarations-division__item {
		width : 33.3333%;
	}
	.category-nav {
		padding : 5px 5px 20px;
	}
	.category-nav__link {
		font-size : 14px;
	}
}
@media screen and (max-width: 620px) {
	.declarations-division__item {
		width : 50%;
	}
}
@media screen and (max-width: 420px) {
	.main__title {
		font-size : 28px;
	}
	.main__title-first-letter:after {
		top : -11px;
		left : -8px;
	}
	.main__category-nav {
		margin-top : 35px;
	}
	.declarations-division__main-title {
		font-size : 22px;
	}
	.declarations-division__title {
		margin-top : 20px;
	}
	.declarations-division__list {
		-ms-flex-pack : justify;
		justify-content : space-between;
	}
	.declarations-division__item {
		width : 45%;
		font-size : 14px;
	}
}
@media screen and (max-width: 768px) {
	.hot-carousel__title {
		padding-bottom : 0;
		font-size : 28px;
	}
	.hot-carousel__link-wrap {
		padding-bottom : 0;
	}
}
@media screen and (max-width: 620px) {
	.hot-carousel__top {
		-ms-flex-wrap : wrap;
		    flex-wrap : wrap;
	}
	.hot-carousel__title {
		width : 100%;
	}
	.hot-carousel__link-wrap {
		margin-left : 0;
	}
}
@media screen and (max-width: 420px) {
	.hot-carousel__title {
		padding-bottom : 10px;
		font-size : 22px;
	}
	.hot-carousel__btn {
		width : 30px;
		height : 30px;
	}
}
@media screen and (max-width: 768px) {
	.news__title {
		font-size : 36px;
	}
	.news__title--main-page {
		font-size : 28px;
	}
	.news__item--big .news__img-wrapper {
		max-width : none;
	}
	.news__img-wrapper {
		max-width : 140px;
	}
}
@media screen and (max-width: 490px) {
	.news__item {
		-ms-flex-direction : column;
		    flex-direction : column;
	}
	.news__item--big .news__item-title {
		margin-top : 0;
		font-size : 20px;
	}
	.news__img-wrapper {
		max-width : none;
	}
	.news__info-wrapper {
		margin : 15px 0 0;
	}
}
@media screen and (max-width: 420px) {
	.news__title {
		font-size : 28px;
	}
	.news__title--main-page {
		font-size : 22px;
	}
	.news__item {
		-ms-flex-direction : column;
		    flex-direction : column;
	}
	.news__img-wrapper {
		max-width : none;
	}
	.news__info-wrapper {
		margin : 15px 0 0;
	}
}
@media screen and (max-width: 1020px) {
	.aside {
		width : 220px;
		margin-left : 20px;
	}
}
@media screen and (max-width: 768px) {
	.aside {
		display : none;
	}
}
@media screen and (max-width: 768px) {
	.publication__title {
		font-size : 28px;
	}
}
@media screen and (max-width: 420px) {
	.publication__title {
		font-size : 22px;
	}
}
@media screen and (max-width: 1020px) {
	.declarations-top__subscriptions-wrap {
		display : none;
	}
}
@media screen and (max-width: 900px) {
	.declarations__display-view {
		display : none;
	}
}
@media screen and (max-width: 870px) {
	.declaration__title {
		font-size : 14px;
		line-height : 1.3;
	}
}
@media screen and (max-width: 768px) {
	.declarations-top__title {
		font-size : 28px;
	}
}
@media screen and (max-width: 540px) {
	.declaration--tile {
		width : calc(50% - 7px);
		max-width : initial;
	}
}
@media screen and (max-width: 420px) {
	.declarations-top__title {
		font-size : 22px;
	}
}
@media screen and (max-width: 400px) {
	.declarations-list--tile {
		-ms-flex-pack : center;
		justify-content : center;
	}
	.declaration--tile {
		width : 100%;
		max-width : 260px;
	}
}
@media screen and (max-width: 840px) {
	.obyavlenie-control__link {
		font-size : 12px;
	}
}
@media screen and (max-width: 768px) {
	.obyavlenie__name {
		font-size : 28px;
	}
	.obyavlenie-control {
		display : none;
	}
}
@media screen and (max-width: 420px) {
	.obyavlenie__name {
		font-size : 22px;
	}
}
@media screen and (max-width: 768px) {
	.dialogs-item__title {
		font-size : 14px;
	}
	.dialogs-item__message-count {
		font-size : 12px;
	}
	.dialogs-item__new-message-count {
		padding : 3px 5px;
		font-size : 10px;
	}
}
@media screen and (max-width: 560px) {
	.dialog__top {
		-ms-flex-direction : column-reverse;
		    flex-direction : column-reverse;
	}
	.dialog__left {
		margin-top : 15px;
	}
}
@media screen and (max-width: 768px) {
	.chat {
		padding : 15px 5px 15px 10px;
	}
	.chat__wrapper {
		padding-right : 15px;
		padding-left : 10px;
	}
	.chat__text-wrap {
		width : 60%;
		padding : 10px 15px;
	}
	.chat__text {
		font-size : 14px;
	}
}
@media screen and (max-width: 580px) {
	.chat__text-wrap {
		width : 80%;
	}
}
@media screen and (max-width: 590px) {
	.balance__hide-mb {
		display : none;
	}
	.balance__title-wrap--num {
		min-width : 60px;
	}
	.balance__title-wrap--sum {
		min-width : 70px;
	}
	.balance__col--num {
		min-width : 60px;
	}
	.balance__col--sum {
		min-width : 70px;
	}
}
@media screen and (max-width: 768px) {
	.settings__nav {
		-ms-flex-direction : column;
		    flex-direction : column;
		-ms-flex-wrap : wrap;
		    flex-wrap : wrap;
		-ms-flex-line-pack : start;
		align-content : flex-start;
		height : 80px;
	}
	.settings__nav-item {
		width : 33%;
		margin-bottom : 5px;
	}
	.settings__nav-item:nth-child(n+2) {
		margin-left : 0;
	}
}
@media screen and (max-width: 520px) {
	.settings__nav {
		height : 80px;
	}
	.settings__nav-item {
		width : 50%;
		font-size : 14px;
	}
}
@media screen and (max-width: 768px) {
	.comments__title {
		font-size : 28px;
	}
	.comment__name {
		font-size : 14px;
	}
	.comment__text {
		font-size : 14px;
	}
}
@media screen and (max-width: 580px) {
	.add-message__bottom-wrap {
		-ms-flex-direction : column;
		    flex-direction : column;
		-ms-flex-align : start;
		align-items : flex-start;
	}
	.add-message__info-text {
		max-width : none;
	}
	.add-message__button-wrap {
		-ms-flex-item-align : end;
		align-self : flex-end;
		margin-top : 15px;
	}
}
@media screen and (max-width: 420px) {
	.comments__title {
		font-size : 22px;
	}
	.comments__authorization-text {
		text-align : center;
	}
	.add-message {
		padding : 10px 10px 15px;
	}
}
@media screen and (max-width: 1020px) {
	.lk-header {
		padding : 30px 15px 0;
	}
}
@media screen and (max-width: 940px) {
	.lk-header__info {
		-ms-flex-direction : column;
		    flex-direction : column;
		-ms-flex-align : start;
		align-items : flex-start;
	}
	.lk-header__balance-wrap {
		margin-top : 15px;
		width : 280px;
	}
	.lk-header__balance-text {
		margin-right : 25px;
	}
}
@media screen and (max-width: 768px) {
	.lk-header__title {
		font-size : 32px;
	}
	.lk-header__nav-list {
		overflow : auto;
		overflow-y : hidden;
		-webkit-overflow-scrolling : touch;
	}
	.lk-header__nav-item {
		font-size : 14px;
	}
	.lk-header__nav-link {
		padding : 10px;
	}
	.lk-header__nav-balance {
		font-size : 14px;
	}
	.lk__title {
		font-size : 28px;
	}
}
@media screen and (max-width: 620px) {
	.lk-header {
		padding : 30px 10px 0;
	}
}
@media screen and (max-width: 520px) {
	.banners__top {
		-ms-flex-direction : column;
		    flex-direction : column;
		-ms-flex-align : start;
		align-items : flex-start;
	}
	.banners__btn-wrap {
		margin-top : 10px;
	}
}
@media screen and (max-width: 420px) {
	.lk-header__title {
		font-size : 26px;
	}
	.lk__title {
		font-size : 22px;
	}
}
@media screen and (max-width: 590px) {
	.image-download-box__list-item:nth-child(n) {
		margin : 0;
	}
	.image-download-box__list-item:nth-child(2n+2) {
		margin-left : 10px;
	}
	.image-download-box__list-item:nth-last-child(n+3) {
		margin-bottom : 10px;
	}
}
@media screen and (max-width: 350px) {
	.img-download__button {
		width : 135px;
		height : 90px;
	}
}
/*
@media screen and (max-width: 980px){
  .input-row{
    &__label{
      left: 0;
      top: -25px;
      text-align: left;
      max-width: 100%;
      width: auto;
    }
  }
}*/
@media screen and (max-width: 980px) {
	.input-row__wrap {
		-ms-flex-direction : column;
		    flex-direction : column;
	}
	.input-row__wrap--between {
		-ms-flex-direction : row;
		    flex-direction : row;
	}
	.input-row__name {
		display : block;
	}
	.input-row__label {
		position : static;
		text-align : left;
		max-width : 100%;
		width : auto;
		padding-bottom : 3px;
	}
	.input-row__warning-text {
		display : block;
		position : static;
		transform : none;
	}
	.input-row__clarification {
		position : static;
		transform : none;
		margin : 5px 0 0;
		min-height : 0;
	}
	.input-row__description {
		max-width : none;
	}
}
@media screen and (max-width: 700px) {
	.form-rows {
		margin-left : 10%;
		margin-right : 7%;
	}
}
@media screen and (max-width: 420px) {
	.form-rows {
		margin-left : 10px;
		margin-right : 10px;
	}
}
@media screen and (max-width: 980px) {
	.form-rows__input-row:nth-child(n+2) {
		margin-top : 15px;
	}
	.form-rows__input-row--big-indent:nth-child(n) {
		margin-top : 25px;
	}
	.suc-input {
		height : 10px;
		top : 4px;
	}
}
@media screen and (max-width: 420px) {
	.suc-input {
		left : -15px;
	}
}
@media screen and (max-width: 360px) {
	#rc-imageselect ,
	.g-recaptcha {
		transform : scale(0.91);
	}
}
@media screen and (max-width: 768px) {
	.like-publications__name {
		font-size : 16px;
	}
	.like-publications__small-descr {
		margin-top : 10px;
	}
	.like-publications__tags-row {
		margin-top : 5px;
	}
}
@media screen and (max-width: 660px) {
	.like-publications__list {
		-ms-flex-pack : justify;
		justify-content : space-between;
	}
	.like-publications__item {
		width : 47%;
		margin-left : 0;
	}
	.like-publications__item:nth-child(n+3) {
		margin-top : 30px;
	}
}
@media screen and (max-width: 420px) {
	.like-publications__list {
		-ms-flex-pack : center;
		justify-content : center;
	}
	.like-publications__item {
		width : 100%;
		margin-left : 0;
	}
	.like-publications__item:nth-child(n+2) {
		margin-top : 30px;
	}
}
@media screen and (max-width: 768px) {
	.pagination {
		-ms-flex-direction : column;
		    flex-direction : column;
	}
	.pagination__nav {
		margin : 10px 0 0;
	}
	.pagination__link {
		font-size : 20px;
	}
	.pagination__link-delimiter {
		font-size : 20px;
	}
}
@media screen and (max-width: 420px) {
	.pagination__buttons-item:nth-child(n+2) {
		margin-left : 3px;
	}
	.pagination__button-link {
		height : 30px;
		width : 30px;
		padding : 8px 0;
		font-size : 12px;
	}
}
@media screen and (max-width: 1020px) {
	.breadcrumbs {
		padding : 20px 15px 0;
	}
}
@media screen and (max-width: 620px) {
	.breadcrumbs {
		padding : 20px 10px 0;
	}
}
/*# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm1vYmlsZS5jc3MiLCJtb2JpbGUvY29tbW9uLmxlc3MiLCJtb2JpbGUvZm9vdGVyLmxlc3MiLCJtb2JpbGUvaGVhZGVyLmxlc3MiLCJtb2JpbGUvbWFpbi5sZXNzIiwibW9iaWxlL2hvdC1jYXJvdXNlbC5sZXNzIiwibW9iaWxlL25ld3MubGVzcyIsIm1vYmlsZS9hc2lkZS5sZXNzIiwibW9iaWxlL3B1YmxpY2F0aW9uLmxlc3MiLCJtb2JpbGUvZGVjbGFyYXRpb25zLmxlc3MiLCJtb2JpbGUvb2J5YXZsZW5pZS5sZXNzIiwibW9iaWxlL2RpYWxvZ3MubGVzcyIsIm1vYmlsZS9kaWFsb2cubGVzcyIsIm1vYmlsZS9jaGF0Lmxlc3MiLCJtb2JpbGUvYmFsYW5jZS5sZXNzIiwibW9iaWxlL3NldGluZ3MubGVzcyIsIm1vYmlsZS9jb21tZW50cy5sZXNzIiwibW9iaWxlL2xrLmxlc3MiLCJtb2JpbGUvaW1hZ2UtZG93bmxvYWQtYm94Lmxlc3MiLCJtb2JpbGUvaW5wdXRzLmxlc3MiLCJtb2JpbGUvYWRkLWFkdmVydC5sZXNzIiwibW9iaWxlL2xpa2UtcHVibGljYXRpb25zLmxlc3MiLCJtb2JpbGUvcGFnaW5hdGlvbi5sZXNzIiwibW9iaWxlL2JyZWFkY3J1bWJzLmxlc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsaUJBQWlCO0FDQWpCO0VBSUU7SUFDRSxnQkFBQTtHREREO0VDSUQ7SUFDRSwwQkFBQTtHREZEO0NBQ0Y7QUNXRDtFQUNFO0lBQ0UsWUFBQTtHRFREO0VDWUQ7SUFDRSxnQkFBQTtHRFZEO0VDYUQ7SUFDRSxnQkFBQTtHRFhEO0NBQ0Y7QUNjRDtFQUNFO0lBQ0UsZ0JBQUE7R0RaRDtDQUNGO0FDZUQ7RUFDRTtJQUNFLGdCQUFBO0dEYkQ7RUNnQkQ7SUFDRSxnQkFBQTtHRGREO0NBQ0Y7QUVoQ0Q7RUFDRTtJQUNFLGdCQUFBO0dGa0NEO0VFaENDO0lBQ0UsaUJBQUE7R0ZrQ0g7RUU5QkQ7SUFDRSxnQkFBQTtHRmdDRDtDQUNGO0FFN0JE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O0d0QnVzQkQ7RXNCcnNCQztJQUNFLGlCQUFBO0d0QnVzQkg7RXNCcHNCQztJQUNFLGdCQUFBO0d0QnNzQkg7RXNCbnNCQztJQUNFLGdCQUFBO0d0QnFzQkg7Q0FDRjtBc0Jqc0JEO0VBR007SUFDRSxpQkFBQTtHdEJpc0JMO0VzQjdyQkM7SUFDRSxhQUFBO0lBQ0EsWUFBQTtJQUNBLGVBQUE7SUFDQSxnQkFBQTtHdEIrckJIO0NBQ0Y7QXVCOXRCRDtFQUNFO0lBQ0UscUJBQUE7R3ZCZ3VCRDtDQUNGO0F1Qjd0QkQ7RUFDRTtJQUNFLHFCQUFBO0d2Qit0QkQ7Q0FDRiIsImZpbGUiOiJtb2JpbGUuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLyptb2JpbGUgZm9sZGVyKi9cbkBtZWRpYSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDEwMjBweCkge1xuICAuY29udGVudCB7XG4gICAgcGFkZGluZzogMCAxNXB4O1xuICB9XG4gIC5tYWluLWNvbnRlbnQge1xuICAgIHdpZHRoOiBjYWxjKDEwMCUgLSAyNDBweCk7XG4gIH1cbn1cbkBtZWRpYSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDc2OHB4KSB7XG4gIC5tYWluLWNvbnRlbnQge1xuICAgIHdpZHRoOiAxMDAlO1xuICB9XG4gIC5iaWdnZXN0LXRpdGxlIHtcbiAgICBmb250LXNpemU6IDM2cHg7XG4gIH1cbiAgLmJpZy10aXRsZSB7XG4gICAgZm9udC1zaXplOiAyOHB4O1xuICB9XG59XG5AbWVkaWEgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA2MjBweCkge1xuICAuY29udGVudCB7XG4gICAgcGFkZGluZzogMCAxMHB4O1xuICB9XG59XG5AbWVkaWEgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA0MjBweCkge1xuICAuYmlnZ2VzdC10aXRsZSB7XG4gICAgZm9udC1zaXplOiAyOHB4O1xuICB9XG4gIC5iaWctdGl0bGUge1xuICAgIGZvbnQtc2l6ZTogMjJweDtcbiAgfVxufVxuQG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDogMTAyMHB4KSB7XG4gIC5mb290ZXIge1xuICAgIHBhZGRpbmc6IDAgMTVweDtcbiAgfVxuICAuZm9vdGVyX19zb2Mge1xuICAgIG1heC13aWR0aDogMTkwcHg7XG4gIH1cbiAgLnN1Yi1uYXYge1xuICAgIHBhZGRpbmctbGVmdDogMDtcbiAgfVxufVxuQG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDogOTIwcHgpIHtcbiAgLmZvb3Rlcl9fd3JhcHBlciB7XG4gICAgZmxleC13cmFwOiB3cmFwO1xuICB9XG4gIC5mb290ZXJfX3NvYyB7XG4gICAgbWFyZ2luLXRvcDogMjVweDtcbiAgfVxuICAuZm9vdGVyX19yYXRpbmcge1xuICAgIG1hcmdpbi10b3A6IDI1cHg7XG4gIH1cbiAgLnN1Yi1uYXYge1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgZmxleC13cmFwOiB3cmFwO1xuICAgIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjtcbiAgICBvcmRlcjogLTE7XG4gICAgd2lkdGg6IDQ1JTtcbiAgfVxuICAuc3ViLW5hdjpudGgtY2hpbGQoMykge1xuICAgIHRleHQtYWxpZ246IHJpZ2h0O1xuICB9XG4gIC5zdWItbmF2X19pdGVtIHtcbiAgICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xuICAgIHdpZHRoOiAxMDAlO1xuICB9XG4gIC5zdWItbmF2X19pdGVtOm50aC1jaGlsZChuKSB7XG4gICAgbWFyZ2luLXRvcDogMTBweDtcbiAgfVxufVxuQG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDogNjIwcHgpIHtcbiAgLmZvb3RlciB7XG4gICAgcGFkZGluZzogMCAxMHB4O1xuICB9XG59XG5AbWVkaWEgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA0MzBweCkge1xuICAuZm9vdGVyX19zb2Mge1xuICAgIHdpZHRoOiAxMDAlO1xuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgICBtYXgtd2lkdGg6IGluaXRpYWw7XG4gIH1cbiAgLmZvb3Rlcl9fcmF0aW5nLWNvbCB7XG4gICAgd2lkdGg6IDEwMCU7XG4gIH1cbiAgLnJhdGluZyB7XG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xuICB9XG59XG5AbWVkaWEgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiAxMDIwcHgpIHtcbiAgLmhlYWRlciB7XG4gICAgcGFkZGluZzogMjBweCAxNXB4IDA7XG4gIH1cbiAgLmNlbnRyYWwtbmF2aWdhdGlvbiB7XG4gICAgbWF4LXdpZHRoOiA0NSU7XG4gIH1cbiAgLmNlbnRyYWwtbmF2aWdhdGlvbl9fdG9wLWxpc3Qtd3JhcCB7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgfVxuICAuY2VudHJhbC1uYXZpZ2F0aW9uX19uYXYtbGlzdCB7XG4gICAgcGFkZGluZy1yaWdodDogMDtcbiAgfVxuICAuYXV0aG9yaXplZC1saXN0IHtcbiAgICBtYXgtd2lkdGg6IDEwMCU7XG4gIH1cbiAgLmF1dGhvcml6ZWQtbGlzdF9faXRlbS0tYWR2ZXJ0cyB7XG4gICAgZGlzcGxheTogbm9uZTtcbiAgfVxuICAuYXV0aG9yaXplZC1saXN0X19pdGVtLS1iYWxhbmNlIHtcbiAgICBkaXNwbGF5OiBub25lO1xuICB9XG59XG5AbWVkaWEgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA3NjhweCkge1xuICAuc2VhcmNoLXBhbmVsIHtcbiAgICBiYWNrZ3JvdW5kLXBvc2l0aW9uOiAxMnB4IDc4cHg7XG4gIH1cbiAgLnNlYXJjaC1wYW5lbF9fZmlsdGVycy13cmFwIHtcbiAgICBwYWRkaW5nOiAwIDM1cHg7XG4gICAgZmxleC13cmFwOiB3cmFwO1xuICAgIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjtcbiAgfVxuICAuc2VhcmNoLXBhbmVsX19pbnB1dC13cmFwIHtcbiAgICB3aWR0aDogY2FsYygxMDAlIC0gOTdweCk7XG4gICAgbWF4LXdpZHRoOiBpbml0aWFsO1xuICAgIG1hcmdpbjogMTBweCAwIDA7XG4gICAgb3JkZXI6IDE7XG4gIH1cbiAgLnNlYXJjaC1wYW5lbF9fc2VsZWN0LXdyYXAge1xuICAgIHdpZHRoOiBjYWxjKDUwJSAtIDVweCk7XG4gICAgbWF4LXdpZHRoOiBpbml0aWFsO1xuICAgIG1hcmdpbi1sZWZ0OiAwO1xuICB9XG4gIC5zZWFyY2gtcGFuZWxfX2J0bi13cmFwIHtcbiAgICB3aWR0aDogODdweDtcbiAgICBtYXJnaW46IDEwcHggMCAwO1xuICAgIHRleHQtYWxpZ246IHJpZ2h0O1xuICAgIG9yZGVyOiAyO1xuICB9XG4gIC5zZWFyY2gtcGFuZWwgLmlucHV0LFxuICAuc2VhcmNoLXBhbmVsIC5zZWxlY3QtYnV0dG9uIHtcbiAgICB3aWR0aDogMTAwJSAhaW1wb3J0YW50O1xuICB9XG59XG5AbWVkaWEgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA3MzBweCkge1xuICAubWFpbi1uYXYge1xuICAgIGZsZXgtd3JhcDogd3JhcDtcbiAgfVxuICAubWFpbi1uYXZfX2NlbnRyYWwtbmF2aWdhdGlvbiB7XG4gICAgb3JkZXI6IDE7XG4gIH1cbiAgLmNlbnRyYWwtbmF2aWdhdGlvbiB7XG4gICAgbWF4LXdpZHRoOiAxMDAlO1xuICAgIHdpZHRoOiAxMDAlO1xuICB9XG4gIC5jZW50cmFsLW5hdmlnYXRpb25fX3RvcC1saXN0LXdyYXAge1xuICAgIG1hcmdpbi10b3A6IDIwcHg7XG4gIH1cbiAgLmNlbnRyYWwtbmF2aWdhdGlvbl9fYm90dG9tLWxpc3Qtd3JhcC0tYXV0aG9yaXplZCB7XG4gICAgbWFyZ2luLXRvcDogMjBweDtcbiAgfVxufVxuQG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDogNjIwcHgpIHtcbiAgLmhlYWRlciB7XG4gICAgcGFkZGluZzogMjBweCAxMHB4IDA7XG4gIH1cbn1cbkBtZWRpYSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDUwMHB4KSB7XG4gIC5zZWFyY2gtcGFuZWwge1xuICAgIGJhY2tncm91bmQ6ICNlZmUzYjQ7XG4gIH1cbiAgLnNlYXJjaC1wYW5lbF9fZmlsdGVycy13cmFwIHtcbiAgICBwYWRkaW5nOiAwIDE1cHg7XG4gIH1cbiAgLnNlYXJjaC1wYW5lbF9fc2VsZWN0LXdyYXAge1xuICAgIHdpZHRoOiAxMDAlO1xuICB9XG4gIC5zZWFyY2gtcGFuZWxfX3NlbGVjdC13cmFwOm50aC1jaGlsZCgzKSB7XG4gICAgbWFyZ2luLXRvcDogMTBweDtcbiAgfVxufVxuQG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDogNDIwcHgpIHtcbiAgLmNlbnRyYWwtbmF2aWdhdGlvbl9fbmF2LWl0ZW06bnRoLWNoaWxkKG4rMikge1xuICAgIG1hcmdpbi1sZWZ0OiAxMHB4O1xuICB9XG59XG5AbWVkaWEgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA4NzBweCkge1xuICAuZGVjbGFyYXRpb25zLWRpdmlzaW9uX19pdGVtIHtcbiAgICB3aWR0aDogNTAlO1xuICB9XG59XG5AbWVkaWEgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA3NjhweCkge1xuICAubWFpbl9fdGl0bGUge1xuICAgIHBhZGRpbmctcmlnaHQ6IDA7XG4gICAgZm9udC1zaXplOiAzNnB4O1xuICB9XG4gIC5tYWluX190aXRsZS1maXJzdC1sZXR0ZXI6YWZ0ZXIge1xuICAgIHRvcDogLTEwcHg7XG4gICAgbGVmdDogLTVweDtcbiAgfVxuICAuZGVjbGFyYXRpb25zLWRpdmlzaW9uX19tYWluLXRpdGxlIHtcbiAgICBmb250LXNpemU6IDI4cHg7XG4gIH1cbiAgLmRlY2xhcmF0aW9ucy1kaXZpc2lvbl9faXRlbSB7XG4gICAgd2lkdGg6IDMzLjMzMzMlO1xuICB9XG4gIC5jYXRlZ29yeS1uYXYge1xuICAgIHBhZGRpbmc6IDVweCA1cHggMjBweDtcbiAgfVxuICAuY2F0ZWdvcnktbmF2X19saW5rIHtcbiAgICBmb250LXNpemU6IDE0cHg7XG4gIH1cbn1cbkBtZWRpYSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDYyMHB4KSB7XG4gIC5kZWNsYXJhdGlvbnMtZGl2aXNpb25fX2l0ZW0ge1xuICAgIHdpZHRoOiA1MCU7XG4gIH1cbn1cbkBtZWRpYSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDQyMHB4KSB7XG4gIC5tYWluX190aXRsZSB7XG4gICAgZm9udC1zaXplOiAyOHB4O1xuICB9XG4gIC5tYWluX190aXRsZS1maXJzdC1sZXR0ZXI6YWZ0ZXIge1xuICAgIHRvcDogLTExcHg7XG4gICAgbGVmdDogLThweDtcbiAgfVxuICAubWFpbl9fY2F0ZWdvcnktbmF2IHtcbiAgICBtYXJnaW4tdG9wOiAzNXB4O1xuICB9XG4gIC5kZWNsYXJhdGlvbnMtZGl2aXNpb25fX21haW4tdGl0bGUge1xuICAgIGZvbnQtc2l6ZTogMjJweDtcbiAgfVxuICAuZGVjbGFyYXRpb25zLWRpdmlzaW9uX190aXRsZSB7XG4gICAgbWFyZ2luLXRvcDogMjBweDtcbiAgfVxuICAuZGVjbGFyYXRpb25zLWRpdmlzaW9uX19saXN0IHtcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XG4gIH1cbiAgLmRlY2xhcmF0aW9ucy1kaXZpc2lvbl9faXRlbSB7XG4gICAgd2lkdGg6IDQ1JTtcbiAgICBmb250LXNpemU6IDE0cHg7XG4gIH1cbn1cbkBtZWRpYSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDc2OHB4KSB7XG4gIC5ob3QtY2Fyb3VzZWxfX3RpdGxlIHtcbiAgICBwYWRkaW5nLWJvdHRvbTogMDtcbiAgICBmb250LXNpemU6IDI4cHg7XG4gIH1cbiAgLmhvdC1jYXJvdXNlbF9fbGluay13cmFwIHtcbiAgICBwYWRkaW5nLWJvdHRvbTogMDtcbiAgfVxufVxuQG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDogNjIwcHgpIHtcbiAgLmhvdC1jYXJvdXNlbF9fdG9wIHtcbiAgICBmbGV4LXdyYXA6IHdyYXA7XG4gIH1cbiAgLmhvdC1jYXJvdXNlbF9fdGl0bGUge1xuICAgIHdpZHRoOiAxMDAlO1xuICB9XG4gIC5ob3QtY2Fyb3VzZWxfX2xpbmstd3JhcCB7XG4gICAgbWFyZ2luLWxlZnQ6IDA7XG4gIH1cbn1cbkBtZWRpYSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDQyMHB4KSB7XG4gIC5ob3QtY2Fyb3VzZWxfX3RpdGxlIHtcbiAgICBwYWRkaW5nLWJvdHRvbTogMTBweDtcbiAgICBmb250LXNpemU6IDIycHg7XG4gIH1cbiAgLmhvdC1jYXJvdXNlbF9fYnRuIHtcbiAgICB3aWR0aDogMzBweDtcbiAgICBoZWlnaHQ6IDMwcHg7XG4gIH1cbn1cbkBtZWRpYSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDc2OHB4KSB7XG4gIC5uZXdzX190aXRsZSB7XG4gICAgZm9udC1zaXplOiAzNnB4O1xuICB9XG4gIC5uZXdzX190aXRsZS0tbWFpbi1wYWdlIHtcbiAgICBmb250LXNpemU6IDI4cHg7XG4gIH1cbiAgLm5ld3NfX2l0ZW0tLWJpZyAubmV3c19faW1nLXdyYXBwZXIge1xuICAgIG1heC13aWR0aDogbm9uZTtcbiAgfVxuICAubmV3c19faW1nLXdyYXBwZXIge1xuICAgIG1heC13aWR0aDogMTQwcHg7XG4gIH1cbn1cbkBtZWRpYSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDQ5MHB4KSB7XG4gIC5uZXdzX19pdGVtIHtcbiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICB9XG4gIC5uZXdzX19pdGVtLS1iaWcgLm5ld3NfX2l0ZW0tdGl0bGUge1xuICAgIG1hcmdpbi10b3A6IDA7XG4gICAgZm9udC1zaXplOiAyMHB4O1xuICB9XG4gIC5uZXdzX19pbWctd3JhcHBlciB7XG4gICAgbWF4LXdpZHRoOiBub25lO1xuICB9XG4gIC5uZXdzX19pbmZvLXdyYXBwZXIge1xuICAgIG1hcmdpbjogMTVweCAwIDA7XG4gIH1cbn1cbkBtZWRpYSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDQyMHB4KSB7XG4gIC5uZXdzX190aXRsZSB7XG4gICAgZm9udC1zaXplOiAyOHB4O1xuICB9XG4gIC5uZXdzX190aXRsZS0tbWFpbi1wYWdlIHtcbiAgICBmb250LXNpemU6IDIycHg7XG4gIH1cbiAgLm5ld3NfX2l0ZW0ge1xuICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gIH1cbiAgLm5ld3NfX2ltZy13cmFwcGVyIHtcbiAgICBtYXgtd2lkdGg6IG5vbmU7XG4gIH1cbiAgLm5ld3NfX2luZm8td3JhcHBlciB7XG4gICAgbWFyZ2luOiAxNXB4IDAgMDtcbiAgfVxufVxuQG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDogMTAyMHB4KSB7XG4gIC5hc2lkZSB7XG4gICAgd2lkdGg6IDIyMHB4O1xuICAgIG1hcmdpbi1sZWZ0OiAyMHB4O1xuICB9XG59XG5AbWVkaWEgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA3NjhweCkge1xuICAuYXNpZGUge1xuICAgIGRpc3BsYXk6IG5vbmU7XG4gIH1cbn1cbkBtZWRpYSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDc2OHB4KSB7XG4gIC5wdWJsaWNhdGlvbl9fdGl0bGUge1xuICAgIGZvbnQtc2l6ZTogMjhweDtcbiAgfVxufVxuQG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDogNDIwcHgpIHtcbiAgLnB1YmxpY2F0aW9uX190aXRsZSB7XG4gICAgZm9udC1zaXplOiAyMnB4O1xuICB9XG59XG5AbWVkaWEgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiAxMDIwcHgpIHtcbiAgLmRlY2xhcmF0aW9ucy10b3BfX3N1YnNjcmlwdGlvbnMtd3JhcCB7XG4gICAgZGlzcGxheTogbm9uZTtcbiAgfVxufVxuQG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDogOTAwcHgpIHtcbiAgLmRlY2xhcmF0aW9uc19fZGlzcGxheS12aWV3IHtcbiAgICBkaXNwbGF5OiBub25lO1xuICB9XG59XG5AbWVkaWEgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA4NzBweCkge1xuICAuZGVjbGFyYXRpb25fX3RpdGxlIHtcbiAgICBmb250LXNpemU6IDE0cHg7XG4gICAgbGluZS1oZWlnaHQ6IDEuMztcbiAgfVxufVxuQG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDogNzY4cHgpIHtcbiAgLmRlY2xhcmF0aW9ucy10b3BfX3RpdGxlIHtcbiAgICBmb250LXNpemU6IDI4cHg7XG4gIH1cbn1cbkBtZWRpYSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDU0MHB4KSB7XG4gIC5kZWNsYXJhdGlvbi0tdGlsZSB7XG4gICAgd2lkdGg6IGNhbGMoNTAlIC0gN3B4KTtcbiAgICBtYXgtd2lkdGg6IGluaXRpYWw7XG4gIH1cbn1cbkBtZWRpYSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDQyMHB4KSB7XG4gIC5kZWNsYXJhdGlvbnMtdG9wX190aXRsZSB7XG4gICAgZm9udC1zaXplOiAyMnB4O1xuICB9XG59XG5AbWVkaWEgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA0MDBweCkge1xuICAuZGVjbGFyYXRpb25zLWxpc3QtLXRpbGUge1xuICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICB9XG4gIC5kZWNsYXJhdGlvbi0tdGlsZSB7XG4gICAgd2lkdGg6IDEwMCU7XG4gICAgbWF4LXdpZHRoOiAyNjBweDtcbiAgfVxufVxuQG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDogODQwcHgpIHtcbiAgLm9ieWF2bGVuaWUtY29udHJvbF9fbGluayB7XG4gICAgZm9udC1zaXplOiAxMnB4O1xuICB9XG59XG5AbWVkaWEgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA3NjhweCkge1xuICAub2J5YXZsZW5pZV9fbmFtZSB7XG4gICAgZm9udC1zaXplOiAyOHB4O1xuICB9XG4gIC5vYnlhdmxlbmllLWNvbnRyb2wge1xuICAgIGRpc3BsYXk6IG5vbmU7XG4gIH1cbn1cbkBtZWRpYSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDQyMHB4KSB7XG4gIC5vYnlhdmxlbmllX19uYW1lIHtcbiAgICBmb250LXNpemU6IDIycHg7XG4gIH1cbn1cbkBtZWRpYSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDc2OHB4KSB7XG4gIC5kaWFsb2dzLWl0ZW1fX3RpdGxlIHtcbiAgICBmb250LXNpemU6IDE0cHg7XG4gIH1cbiAgLmRpYWxvZ3MtaXRlbV9fbWVzc2FnZS1jb3VudCB7XG4gICAgZm9udC1zaXplOiAxMnB4O1xuICB9XG4gIC5kaWFsb2dzLWl0ZW1fX25ldy1tZXNzYWdlLWNvdW50IHtcbiAgICBwYWRkaW5nOiAzcHggNXB4O1xuICAgIGZvbnQtc2l6ZTogMTBweDtcbiAgfVxufVxuQG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDogNTYwcHgpIHtcbiAgLmRpYWxvZ19fdG9wIHtcbiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uLXJldmVyc2U7XG4gIH1cbiAgLmRpYWxvZ19fbGVmdCB7XG4gICAgbWFyZ2luLXRvcDogMTVweDtcbiAgfVxufVxuQG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDogNzY4cHgpIHtcbiAgLmNoYXQge1xuICAgIHBhZGRpbmc6IDE1cHggNXB4IDE1cHggMTBweDtcbiAgfVxuICAuY2hhdF9fd3JhcHBlciB7XG4gICAgcGFkZGluZy1yaWdodDogMTVweDtcbiAgICBwYWRkaW5nLWxlZnQ6IDEwcHg7XG4gIH1cbiAgLmNoYXRfX3RleHQtd3JhcCB7XG4gICAgd2lkdGg6IDYwJTtcbiAgICBwYWRkaW5nOiAxMHB4IDE1cHg7XG4gIH1cbiAgLmNoYXRfX3RleHQge1xuICAgIGZvbnQtc2l6ZTogMTRweDtcbiAgfVxufVxuQG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDogNTgwcHgpIHtcbiAgLmNoYXRfX3RleHQtd3JhcCB7XG4gICAgd2lkdGg6IDgwJTtcbiAgfVxufVxuQG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDogNTkwcHgpIHtcbiAgLmJhbGFuY2VfX2hpZGUtbWIge1xuICAgIGRpc3BsYXk6IG5vbmU7XG4gIH1cbiAgLmJhbGFuY2VfX3RpdGxlLXdyYXAtLW51bSB7XG4gICAgbWluLXdpZHRoOiA2MHB4O1xuICB9XG4gIC5iYWxhbmNlX190aXRsZS13cmFwLS1zdW0ge1xuICAgIG1pbi13aWR0aDogNzBweDtcbiAgfVxuICAuYmFsYW5jZV9fY29sLS1udW0ge1xuICAgIG1pbi13aWR0aDogNjBweDtcbiAgfVxuICAuYmFsYW5jZV9fY29sLS1zdW0ge1xuICAgIG1pbi13aWR0aDogNzBweDtcbiAgfVxufVxuQG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDogNzY4cHgpIHtcbiAgLnNldHRpbmdzX19uYXYge1xuICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gICAgZmxleC13cmFwOiB3cmFwO1xuICAgIGFsaWduLWNvbnRlbnQ6IGZsZXgtc3RhcnQ7XG4gICAgaGVpZ2h0OiA4MHB4O1xuICB9XG4gIC5zZXR0aW5nc19fbmF2LWl0ZW0ge1xuICAgIHdpZHRoOiAzMyU7XG4gICAgbWFyZ2luLWJvdHRvbTogNXB4O1xuICB9XG4gIC5zZXR0aW5nc19fbmF2LWl0ZW06bnRoLWNoaWxkKG4rMikge1xuICAgIG1hcmdpbi1sZWZ0OiAwO1xuICB9XG59XG5AbWVkaWEgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA1MjBweCkge1xuICAuc2V0dGluZ3NfX25hdiB7XG4gICAgaGVpZ2h0OiA4MHB4O1xuICB9XG4gIC5zZXR0aW5nc19fbmF2LWl0ZW0ge1xuICAgIHdpZHRoOiA1MCU7XG4gICAgZm9udC1zaXplOiAxNHB4O1xuICB9XG59XG5AbWVkaWEgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA3NjhweCkge1xuICAuY29tbWVudHNfX3RpdGxlIHtcbiAgICBmb250LXNpemU6IDI4cHg7XG4gIH1cbiAgLmNvbW1lbnRfX25hbWUge1xuICAgIGZvbnQtc2l6ZTogMTRweDtcbiAgfVxuICAuY29tbWVudF9fdGV4dCB7XG4gICAgZm9udC1zaXplOiAxNHB4O1xuICB9XG59XG5AbWVkaWEgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA1ODBweCkge1xuICAuYWRkLW1lc3NhZ2VfX2JvdHRvbS13cmFwIHtcbiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICAgIGFsaWduLWl0ZW1zOiBmbGV4LXN0YXJ0O1xuICB9XG4gIC5hZGQtbWVzc2FnZV9faW5mby10ZXh0IHtcbiAgICBtYXgtd2lkdGg6IG5vbmU7XG4gIH1cbiAgLmFkZC1tZXNzYWdlX19idXR0b24td3JhcCB7XG4gICAgYWxpZ24tc2VsZjogZmxleC1lbmQ7XG4gICAgbWFyZ2luLXRvcDogMTVweDtcbiAgfVxufVxuQG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDogNDIwcHgpIHtcbiAgLmNvbW1lbnRzX190aXRsZSB7XG4gICAgZm9udC1zaXplOiAyMnB4O1xuICB9XG4gIC5jb21tZW50c19fYXV0aG9yaXphdGlvbi10ZXh0IHtcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gIH1cbiAgLmFkZC1tZXNzYWdlIHtcbiAgICBwYWRkaW5nOiAxMHB4IDEwcHggMTVweDtcbiAgfVxufVxuQG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDogMTAyMHB4KSB7XG4gIC5say1oZWFkZXIge1xuICAgIHBhZGRpbmc6IDMwcHggMTVweCAwO1xuICB9XG59XG5AbWVkaWEgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA5NDBweCkge1xuICAubGstaGVhZGVyX19pbmZvIHtcbiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICAgIGFsaWduLWl0ZW1zOiBmbGV4LXN0YXJ0O1xuICB9XG4gIC5say1oZWFkZXJfX2JhbGFuY2Utd3JhcCB7XG4gICAgbWFyZ2luLXRvcDogMTVweDtcbiAgICB3aWR0aDogMjgwcHg7XG4gIH1cbiAgLmxrLWhlYWRlcl9fYmFsYW5jZS10ZXh0IHtcbiAgICBtYXJnaW4tcmlnaHQ6IDI1cHg7XG4gIH1cbn1cbkBtZWRpYSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDc2OHB4KSB7XG4gIC5say1oZWFkZXJfX3RpdGxlIHtcbiAgICBmb250LXNpemU6IDMycHg7XG4gIH1cbiAgLmxrLWhlYWRlcl9fbmF2LWxpc3Qge1xuICAgIG92ZXJmbG93OiBhdXRvO1xuICAgIG92ZXJmbG93LXk6IGhpZGRlbjtcbiAgICAtd2Via2l0LW92ZXJmbG93LXNjcm9sbGluZzogdG91Y2g7XG4gIH1cbiAgLmxrLWhlYWRlcl9fbmF2LWl0ZW0ge1xuICAgIGZvbnQtc2l6ZTogMTRweDtcbiAgfVxuICAubGstaGVhZGVyX19uYXYtbGluayB7XG4gICAgcGFkZGluZzogMTBweDtcbiAgfVxuICAubGstaGVhZGVyX19uYXYtYmFsYW5jZSB7XG4gICAgZm9udC1zaXplOiAxNHB4O1xuICB9XG4gIC5sa19fdGl0bGUge1xuICAgIGZvbnQtc2l6ZTogMjhweDtcbiAgfVxufVxuQG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDogNjIwcHgpIHtcbiAgLmxrLWhlYWRlciB7XG4gICAgcGFkZGluZzogMzBweCAxMHB4IDA7XG4gIH1cbn1cbkBtZWRpYSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDUyMHB4KSB7XG4gIC5iYW5uZXJzX190b3Age1xuICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gICAgYWxpZ24taXRlbXM6IGZsZXgtc3RhcnQ7XG4gIH1cbiAgLmJhbm5lcnNfX2J0bi13cmFwIHtcbiAgICBtYXJnaW4tdG9wOiAxMHB4O1xuICB9XG59XG5AbWVkaWEgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA0MjBweCkge1xuICAubGstaGVhZGVyX190aXRsZSB7XG4gICAgZm9udC1zaXplOiAyNnB4O1xuICB9XG4gIC5sa19fdGl0bGUge1xuICAgIGZvbnQtc2l6ZTogMjJweDtcbiAgfVxufVxuQG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDogNTkwcHgpIHtcbiAgLmltYWdlLWRvd25sb2FkLWJveF9fbGlzdC1pdGVtOm50aC1jaGlsZChuKSB7XG4gICAgbWFyZ2luOiAwO1xuICB9XG4gIC5pbWFnZS1kb3dubG9hZC1ib3hfX2xpc3QtaXRlbTpudGgtY2hpbGQoMm4rMikge1xuICAgIG1hcmdpbi1sZWZ0OiAxMHB4O1xuICB9XG4gIC5pbWFnZS1kb3dubG9hZC1ib3hfX2xpc3QtaXRlbTpudGgtbGFzdC1jaGlsZChuKzMpIHtcbiAgICBtYXJnaW4tYm90dG9tOiAxMHB4O1xuICB9XG59XG5AbWVkaWEgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiAzNTBweCkge1xuICAuaW1nLWRvd25sb2FkX19idXR0b24ge1xuICAgIHdpZHRoOiAxMzVweDtcbiAgICBoZWlnaHQ6IDkwcHg7XG4gIH1cbn1cbi8qXG5AbWVkaWEgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA5ODBweCl7XG4gIC5pbnB1dC1yb3d7XG4gICAgJl9fbGFiZWx7XG4gICAgICBsZWZ0OiAwO1xuICAgICAgdG9wOiAtMjVweDtcbiAgICAgIHRleHQtYWxpZ246IGxlZnQ7XG4gICAgICBtYXgtd2lkdGg6IDEwMCU7XG4gICAgICB3aWR0aDogYXV0bztcbiAgICB9XG4gIH1cbn0qL1xuQG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDogOTgwcHgpIHtcbiAgLmlucHV0LXJvd19fd3JhcCB7XG4gICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgfVxuICAuaW5wdXQtcm93X193cmFwLS1iZXR3ZWVuIHtcbiAgICBmbGV4LWRpcmVjdGlvbjogcm93O1xuICB9XG4gIC5pbnB1dC1yb3dfX25hbWUge1xuICAgIGRpc3BsYXk6IGJsb2NrO1xuICB9XG4gIC5pbnB1dC1yb3dfX2xhYmVsIHtcbiAgICBwb3NpdGlvbjogc3RhdGljO1xuICAgIHRleHQtYWxpZ246IGxlZnQ7XG4gICAgbWF4LXdpZHRoOiAxMDAlO1xuICAgIHdpZHRoOiBhdXRvO1xuICAgIHBhZGRpbmctYm90dG9tOiAzcHg7XG4gIH1cbiAgLmlucHV0LXJvd19fd2FybmluZy10ZXh0IHtcbiAgICBkaXNwbGF5OiBibG9jaztcbiAgICBwb3NpdGlvbjogc3RhdGljO1xuICAgIHRyYW5zZm9ybTogbm9uZTtcbiAgfVxuICAuaW5wdXQtcm93X19jbGFyaWZpY2F0aW9uIHtcbiAgICBwb3NpdGlvbjogc3RhdGljO1xuICAgIHRyYW5zZm9ybTogbm9uZTtcbiAgICBtYXJnaW46IDVweCAwIDA7XG4gICAgbWluLWhlaWdodDogMDtcbiAgfVxuICAuaW5wdXQtcm93X19kZXNjcmlwdGlvbiB7XG4gICAgbWF4LXdpZHRoOiBub25lO1xuICB9XG59XG5AbWVkaWEgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA3MDBweCkge1xuICAuZm9ybS1yb3dzIHtcbiAgICBtYXJnaW4tbGVmdDogMTAlO1xuICAgIG1hcmdpbi1yaWdodDogNyU7XG4gIH1cbn1cbkBtZWRpYSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDQyMHB4KSB7XG4gIC5mb3JtLXJvd3Mge1xuICAgIG1hcmdpbi1sZWZ0OiAxMHB4O1xuICAgIG1hcmdpbi1yaWdodDogMTBweDtcbiAgfVxufVxuQG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDogOTgwcHgpIHtcbiAgLmZvcm0tcm93c19faW5wdXQtcm93Om50aC1jaGlsZChuKzIpIHtcbiAgICBtYXJnaW4tdG9wOiAxNXB4O1xuICB9XG4gIC5mb3JtLXJvd3NfX2lucHV0LXJvdy0tYmlnLWluZGVudDpudGgtY2hpbGQobikge1xuICAgIG1hcmdpbi10b3A6IDI1cHg7XG4gIH1cbiAgLnN1Yy1pbnB1dCB7XG4gICAgaGVpZ2h0OiAxMHB4O1xuICAgIHRvcDogNHB4O1xuICB9XG59XG5AbWVkaWEgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA0MjBweCkge1xuICAuc3VjLWlucHV0IHtcbiAgICBsZWZ0OiAtMTVweDtcbiAgfVxufVxuQG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDogMzYwcHgpIHtcbiAgI3JjLWltYWdlc2VsZWN0LFxuICAuZy1yZWNhcHRjaGEge1xuICAgIHRyYW5zZm9ybTogc2NhbGUoMC45MSk7XG4gIH1cbn1cbkBtZWRpYSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDc2OHB4KSB7XG4gIC5saWtlLXB1YmxpY2F0aW9uc19fbmFtZSB7XG4gICAgZm9udC1zaXplOiAxNnB4O1xuICB9XG4gIC5saWtlLXB1YmxpY2F0aW9uc19fc21hbGwtZGVzY3Ige1xuICAgIG1hcmdpbi10b3A6IDEwcHg7XG4gIH1cbiAgLmxpa2UtcHVibGljYXRpb25zX190YWdzLXJvdyB7XG4gICAgbWFyZ2luLXRvcDogNXB4O1xuICB9XG59XG5AbWVkaWEgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA2NjBweCkge1xuICAubGlrZS1wdWJsaWNhdGlvbnNfX2xpc3Qge1xuICAgIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjtcbiAgfVxuICAubGlrZS1wdWJsaWNhdGlvbnNfX2l0ZW0ge1xuICAgIHdpZHRoOiA0NyU7XG4gICAgbWFyZ2luLWxlZnQ6IDA7XG4gIH1cbiAgLmxpa2UtcHVibGljYXRpb25zX19pdGVtOm50aC1jaGlsZChuKzMpIHtcbiAgICBtYXJnaW4tdG9wOiAzMHB4O1xuICB9XG59XG5AbWVkaWEgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA0MjBweCkge1xuICAubGlrZS1wdWJsaWNhdGlvbnNfX2xpc3Qge1xuICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICB9XG4gIC5saWtlLXB1YmxpY2F0aW9uc19faXRlbSB7XG4gICAgd2lkdGg6IDEwMCU7XG4gICAgbWFyZ2luLWxlZnQ6IDA7XG4gIH1cbiAgLmxpa2UtcHVibGljYXRpb25zX19pdGVtOm50aC1jaGlsZChuKzIpIHtcbiAgICBtYXJnaW4tdG9wOiAzMHB4O1xuICB9XG59XG5AbWVkaWEgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA3NjhweCkge1xuICAucGFnaW5hdGlvbiB7XG4gICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgfVxuICAucGFnaW5hdGlvbl9fbmF2IHtcbiAgICBtYXJnaW46IDEwcHggMCAwO1xuICB9XG4gIC5wYWdpbmF0aW9uX19saW5rIHtcbiAgICBmb250LXNpemU6IDIwcHg7XG4gIH1cbiAgLnBhZ2luYXRpb25fX2xpbmstZGVsaW1pdGVyIHtcbiAgICBmb250LXNpemU6IDIwcHg7XG4gIH1cbn1cbkBtZWRpYSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDQyMHB4KSB7XG4gIC5wYWdpbmF0aW9uX19idXR0b25zLWl0ZW06bnRoLWNoaWxkKG4rMikge1xuICAgIG1hcmdpbi1sZWZ0OiAzcHg7XG4gIH1cbiAgLnBhZ2luYXRpb25fX2J1dHRvbi1saW5rIHtcbiAgICBoZWlnaHQ6IDMwcHg7XG4gICAgd2lkdGg6IDMwcHg7XG4gICAgcGFkZGluZzogOHB4IDA7XG4gICAgZm9udC1zaXplOiAxMnB4O1xuICB9XG59XG5AbWVkaWEgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiAxMDIwcHgpIHtcbiAgLmJyZWFkY3J1bWJzIHtcbiAgICBwYWRkaW5nOiAyMHB4IDE1cHggMDtcbiAgfVxufVxuQG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDogNjIwcHgpIHtcbiAgLmJyZWFkY3J1bWJzIHtcbiAgICBwYWRkaW5nOiAyMHB4IDEwcHggMDtcbiAgfVxufVxuIiwiQG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDogMTAyMHB4KXtcbiAgLm1haW4td3JhcHBlcntcbiAgfVxuXG4gIC5jb250ZW50e1xuICAgIHBhZGRpbmc6IDAgMTVweDtcbiAgfVxuXG4gIC5tYWluLWNvbnRlbnR7XG4gICAgd2lkdGg6IH4nY2FsYygxMDAlIC0gMjQwcHgpJztcbiAgfVxuXG4gIC5iaWdnZXN0LXRpdGxle1xuICB9XG5cbiAgLmJpZy10aXRsZXtcbiAgfVxufVxuXG5AbWVkaWEgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA3NjhweCl7XG4gIC5tYWluLWNvbnRlbnR7XG4gICAgd2lkdGg6IDEwMCU7XG4gIH1cblxuICAuYmlnZ2VzdC10aXRsZXtcbiAgICBmb250LXNpemU6IDM2cHg7XG4gIH1cblxuICAuYmlnLXRpdGxle1xuICAgIGZvbnQtc2l6ZTogMjhweDtcbiAgfVxufVxuXG5AbWVkaWEgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA2MjBweCl7XG4gIC5jb250ZW50e1xuICAgIHBhZGRpbmc6IDAgMTBweDtcbiAgfVxufVxuXG5AbWVkaWEgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA0MjBweCl7XG4gIC5iaWdnZXN0LXRpdGxle1xuICAgIGZvbnQtc2l6ZTogMjhweDtcbiAgfVxuXG4gIC5iaWctdGl0bGV7XG4gICAgZm9udC1zaXplOiAyMnB4O1xuICB9XG59IiwiQG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDogMTAyMHB4KXtcbiAgLmZvb3RlcntcbiAgICBwYWRkaW5nOiAwIDE1cHg7XG5cbiAgICAmX19zb2N7XG4gICAgICBtYXgtd2lkdGg6IDE5MHB4O1xuICAgIH1cbiAgfVxuXG4gIC5zdWItbmF2e1xuICAgIHBhZGRpbmctbGVmdDogMDtcbiAgfVxufVxuXG5AbWVkaWEgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA5MjBweCl7XG4gIC5mb290ZXJ7XG4gICAgJl9fd3JhcHBlcntcbiAgICAgIGZsZXgtd3JhcDogd3JhcDtcbiAgICB9XG5cbiAgICAmX19zb2N7XG4gICAgICBtYXJnaW4tdG9wOiAyNXB4O1xuICAgIH1cblxuICAgICZfX3JhdGluZ3tcbiAgICAgIG1hcmdpbi10b3A6IDI1cHg7XG4gICAgfVxuICB9XG5cbiAgLnN1Yi1uYXZ7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICBmbGV4LXdyYXA6IHdyYXA7XG4gICAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xuICAgIG9yZGVyOiAtMTtcbiAgICB3aWR0aDogNDUlO1xuXG4gICAgJjpudGgtY2hpbGQoMyl7XG4gICAgICB0ZXh0LWFsaWduOiByaWdodDtcbiAgICB9XG5cbiAgICAmX19pdGVte1xuICAgICAgYm94LXNpemluZzogYm9yZGVyLWJveDtcbiAgICAgIHdpZHRoOiAxMDAlO1xuXG4gICAgICAmOm50aC1jaGlsZChuKXtcbiAgICAgICAgbWFyZ2luLXRvcDogMTBweDtcbiAgICAgIH1cbiAgICB9XG4gIH1cbn1cblxuQG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDogNjIwcHgpe1xuICAuZm9vdGVye1xuICAgIHBhZGRpbmc6IDAgMTBweDtcbiAgfVxufVxuXG5AbWVkaWEgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA0MzBweCl7XG4gIC5mb290ZXJ7XG4gICAgJl9fc29je1xuICAgICAgd2lkdGg6IDEwMCU7XG4gICAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gICAgICBtYXgtd2lkdGg6IGluaXRpYWw7XG4gICAgfVxuXG4gICAgJl9fcmF0aW5nLWNvbHtcbiAgICAgIHdpZHRoOiAxMDAlO1xuICAgIH1cbiAgfVxuXG4gIC5yYXRpbmd7XG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xuICB9XG59IiwiQG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDogMTAyMHB4KXtcbiAgLmhlYWRlcntcbiAgICBwYWRkaW5nOiAyMHB4IDE1cHggMDtcbiAgfVxuXG4gIC5jZW50cmFsLW5hdmlnYXRpb257XG4gICAgbWF4LXdpZHRoOiA0NSU7XG5cbiAgICAmX190b3AtbGlzdC13cmFwe1xuICAgICAgZGlzcGxheTogZmxleDtcbiAgICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICAgIH1cblxuICAgICZfX25hdi1saXN0e1xuICAgICAgcGFkZGluZy1yaWdodDogMDtcbiAgICB9XG4gIH1cblxuICAuYXV0aG9yaXplZC1saXN0e1xuICAgIG1heC13aWR0aDogMTAwJTtcblxuICAgICZfX2l0ZW17XG4gICAgICAmLS1mYXZvdXJpdGVze1xuICAgICAgICAvL2Rpc3BsYXk6IG5vbmU7XG4gICAgICB9XG5cbiAgICAgICYtLWFkdmVydHN7XG4gICAgICAgIGRpc3BsYXk6IG5vbmU7XG4gICAgICB9XG5cbiAgICAgICYtLWJhbGFuY2V7XG4gICAgICAgIGRpc3BsYXk6IG5vbmU7XG4gICAgICB9XG4gICAgfVxuICB9XG59XG5cbkBtZWRpYSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDc2OHB4KXtcbiAgLnNlYXJjaC1wYW5lbHtcbiAgICBiYWNrZ3JvdW5kLXBvc2l0aW9uOiAxMnB4IDc4cHg7XG5cbiAgICAmX19maWx0ZXJzLXdyYXB7XG4gICAgICBwYWRkaW5nOiAwIDM1cHg7XG4gICAgICBmbGV4LXdyYXA6IHdyYXA7XG4gICAgICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XG4gICAgfVxuXG4gICAgJl9faW5wdXQtd3JhcHtcbiAgICAgIHdpZHRoOiB+J2NhbGMoMTAwJSAtIDk3cHgpJztcbiAgICAgIG1heC13aWR0aDogaW5pdGlhbDtcbiAgICAgIG1hcmdpbjogMTBweCAwIDA7XG4gICAgICBvcmRlcjogMTtcbiAgICB9XG5cbiAgICAmX19zZWxlY3Qtd3JhcHtcbiAgICAgIHdpZHRoOiB+J2NhbGMoNTAlIC0gNXB4KSc7XG4gICAgICBtYXgtd2lkdGg6IGluaXRpYWw7XG4gICAgICBtYXJnaW4tbGVmdDogMDtcbiAgICB9XG5cbiAgICAmX19idG4td3JhcHtcbiAgICAgIHdpZHRoOiA4N3B4O1xuICAgICAgbWFyZ2luOiAxMHB4IDAgMDtcbiAgICAgIHRleHQtYWxpZ246IHJpZ2h0O1xuICAgICAgb3JkZXI6IDI7XG4gICAgfVxuXG4gICAgLmlucHV0LCAuc2VsZWN0LWJ1dHRvbntcbiAgICAgIHdpZHRoOiAxMDAlICFpbXBvcnRhbnQ7XG4gICAgfVxuICB9XG59XG5cbkBtZWRpYSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDczMHB4KXtcbiAgLm1haW4tbmF2e1xuICAgIGZsZXgtd3JhcDogd3JhcDtcblxuICAgICZfX2NlbnRyYWwtbmF2aWdhdGlvbntcbiAgICAgIG9yZGVyOiAxO1xuICAgIH1cbiAgfVxuXG4gIC5jZW50cmFsLW5hdmlnYXRpb257XG4gICAgbWF4LXdpZHRoOiAxMDAlO1xuICAgIHdpZHRoOiAxMDAlO1xuXG4gICAgJl9fdG9wLWxpc3Qtd3JhcHtcbiAgICAgIG1hcmdpbi10b3A6IDIwcHg7XG4gICAgfVxuXG4gICAgJl9fYm90dG9tLWxpc3Qtd3JhcHtcbiAgICAgICYtLWF1dGhvcml6ZWR7XG4gICAgICAgIG1hcmdpbi10b3A6IDIwcHg7XG4gICAgICB9XG4gICAgfVxuICB9XG59XG5cbkBtZWRpYSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDYyMHB4KXtcbiAgLmhlYWRlcntcbiAgICBwYWRkaW5nOiAyMHB4IDEwcHggMDtcbiAgfVxufVxuXG5AbWVkaWEgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA1MDBweCl7XG4gIC5jZW50cmFsLW5hdmlnYXRpb257XG4gIH1cblxuICAuc2VhcmNoLXBhbmVse1xuICAgIGJhY2tncm91bmQ6ICNlZmUzYjQ7XG4gICAgXG4gICAgJl9fZmlsdGVycy13cmFwe1xuICAgICAgcGFkZGluZzogMCAxNXB4O1xuICAgIH1cblxuICAgICZfX3NlbGVjdC13cmFwe1xuICAgICAgd2lkdGg6IDEwMCU7XG5cbiAgICAgICY6bnRoLWNoaWxkKDMpe1xuICAgICAgICBtYXJnaW4tdG9wOiAxMHB4O1xuICAgICAgfVxuICAgIH1cbiAgfVxufVxuXG5AbWVkaWEgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA0MjBweCl7XG4gIC5jZW50cmFsLW5hdmlnYXRpb257XG4gICAgJl9fbmF2LWl0ZW17XG4gICAgICAmOm50aC1jaGlsZChuKzIpe1xuICAgICAgICBtYXJnaW4tbGVmdDogMTBweDtcbiAgICAgIH1cbiAgICB9XG4gIH1cbn0iLCJAbWVkaWEgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA4NzBweCl7XG4gIC5kZWNsYXJhdGlvbnMtZGl2aXNpb257XG4gICAgJl9faXRlbXtcbiAgICAgIHdpZHRoOiA1MCU7XG4gICAgfVxuICB9XG59XG5cbkBtZWRpYSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDc2OHB4KXtcbiAgLm1haW57XG4gICAgJl9fdGl0bGV7XG4gICAgICBwYWRkaW5nLXJpZ2h0OiAwO1xuICAgICAgZm9udC1zaXplOiAzNnB4O1xuICAgIH1cblxuICAgICZfX3RpdGxlLWZpcnN0LWxldHRlcntcbiAgICAgICY6YWZ0ZXJ7XG4gICAgICAgIHRvcDogLTEwcHg7XG4gICAgICAgIGxlZnQ6IC01cHg7XG4gICAgICB9XG4gICAgfVxuICB9XG5cbiAgLmRlY2xhcmF0aW9ucy1kaXZpc2lvbntcbiAgICAmX19tYWluLXRpdGxle1xuICAgICAgZm9udC1zaXplOiAyOHB4O1xuICAgIH1cblxuICAgICZfX2l0ZW17XG4gICAgICB3aWR0aDogMzMuMzMzMyU7XG4gICAgfVxuICB9XG5cbiAgLmNhdGVnb3J5LW5hdntcbiAgICBwYWRkaW5nOiA1cHggNXB4IDIwcHg7XG5cbiAgICAmX19saW5re1xuICAgICAgZm9udC1zaXplOiAxNHB4O1xuICAgIH1cbiAgfVxufVxuXG5AbWVkaWEgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA2MjBweCl7XG4gIC5kZWNsYXJhdGlvbnMtZGl2aXNpb257XG4gICAgJl9faXRlbXtcbiAgICAgIHdpZHRoOiA1MCU7XG4gICAgfVxuICB9XG59XG5cbkBtZWRpYSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDQyMHB4KXtcbiAgLm1haW57XG4gICAgJl9fdGl0bGV7XG4gICAgICBmb250LXNpemU6IDI4cHg7XG4gICAgfVxuXG4gICAgJl9fdGl0bGUtZmlyc3QtbGV0dGVye1xuICAgICAgJjphZnRlcntcbiAgICAgICAgdG9wOiAtMTFweDtcbiAgICAgICAgbGVmdDogLThweDtcbiAgICAgIH1cbiAgICB9XG5cbiAgICAmX19jYXRlZ29yeS1uYXZ7XG4gICAgICBtYXJnaW4tdG9wOiAzNXB4O1xuICAgIH1cbiAgfVxuXG4gIC5kZWNsYXJhdGlvbnMtZGl2aXNpb257XG4gICAgJl9fbWFpbi10aXRsZXtcbiAgICAgIGZvbnQtc2l6ZTogMjJweDtcbiAgICB9XG5cbiAgICAmX190aXRsZXtcbiAgICAgIG1hcmdpbi10b3A6IDIwcHg7XG4gICAgfVxuXG4gICAgJl9fbGlzdHtcbiAgICAgIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjtcbiAgICB9XG5cbiAgICAmX19pdGVte1xuICAgICAgd2lkdGg6IDQ1JTtcbiAgICAgIGZvbnQtc2l6ZTogMTRweDtcbiAgICB9XG4gIH1cbn0iLCJAbWVkaWEgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA3NjhweCl7XG4gIC5ob3QtY2Fyb3VzZWx7XG4gICAgJl9fdGl0bGV7XG4gICAgICBwYWRkaW5nLWJvdHRvbTogMDtcbiAgICAgIGZvbnQtc2l6ZTogMjhweDtcbiAgICB9XG5cbiAgICAmX19saW5rLXdyYXB7XG4gICAgICBwYWRkaW5nLWJvdHRvbTogMDtcbiAgICB9XG4gIH1cbn1cblxuQG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDogNjIwcHgpe1xuICAuaG90LWNhcm91c2Vse1xuICAgICZfX3RvcHtcbiAgICAgIGZsZXgtd3JhcDogd3JhcDtcbiAgICB9XG5cbiAgICAmX190aXRsZXtcbiAgICAgIHdpZHRoOiAxMDAlO1xuICAgIH1cblxuICAgICZfX2xpbmstd3JhcHtcbiAgICAgIG1hcmdpbi1sZWZ0OiAwO1xuICAgIH1cbiAgfVxufVxuXG5AbWVkaWEgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA0MjBweCl7XG4gIC5ob3QtY2Fyb3VzZWx7XG4gICAgJl9fdGl0bGV7XG4gICAgICBwYWRkaW5nLWJvdHRvbTogMTBweDtcbiAgICAgIGZvbnQtc2l6ZTogMjJweDtcbiAgICB9XG5cbiAgICAmX19idG57XG4gICAgICB3aWR0aDogMzBweDtcbiAgICAgIGhlaWdodDogMzBweDtcbiAgICB9XG4gIH1cbn0iLCJAbWVkaWEgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA3NjhweCl7XG4gIC5uZXdze1xuICAgICZfX3RpdGxle1xuICAgICAgZm9udC1zaXplOiAzNnB4O1xuXG4gICAgICAmLS1tYWluLXBhZ2V7XG4gICAgICAgIGZvbnQtc2l6ZTogMjhweDtcbiAgICAgIH1cbiAgICB9XG5cbiAgICAmX19pdGVte1xuICAgICAgJi0tYmlne1xuICAgICAgICAubmV3c19faW1nLXdyYXBwZXJ7XG4gICAgICAgICAgbWF4LXdpZHRoOiBub25lO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuXG4gICAgJl9faW1nLXdyYXBwZXJ7XG4gICAgICBtYXgtd2lkdGg6IDE0MHB4O1xuICAgIH1cbiAgfVxufVxuXG5AbWVkaWEgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA0OTBweCl7XG4gIC5uZXdze1xuICAgICZfX2l0ZW17XG4gICAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuXG4gICAgICAmLS1iaWd7XG4gICAgICAgIC5uZXdzX19pdGVtLXRpdGxle1xuICAgICAgICAgIG1hcmdpbi10b3A6IDA7XG4gICAgICAgICAgZm9udC1zaXplOiAyMHB4O1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuXG4gICAgJl9faW1nLXdyYXBwZXJ7XG4gICAgICBtYXgtd2lkdGg6IG5vbmU7XG4gICAgfVxuXG4gICAgJl9faW5mby13cmFwcGVye1xuICAgICAgbWFyZ2luOiAxNXB4IDAgMDtcbiAgICB9XG4gIH1cbn1cblxuQG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDogNDIwcHgpe1xuICAubmV3c3tcbiAgICAmX190aXRsZXtcbiAgICAgIGZvbnQtc2l6ZTogMjhweDtcblxuICAgICAgJi0tbWFpbi1wYWdle1xuICAgICAgICBmb250LXNpemU6IDIycHg7XG4gICAgICB9XG4gICAgfVxuXG4gICAgJl9faXRlbXtcbiAgICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gICAgfVxuXG4gICAgJl9faW1nLXdyYXBwZXJ7XG4gICAgICBtYXgtd2lkdGg6IG5vbmU7XG4gICAgfVxuXG4gICAgJl9faW5mby13cmFwcGVye1xuICAgICAgbWFyZ2luOiAxNXB4IDAgMDtcbiAgICB9XG4gIH1cbn0iLCJAbWVkaWEgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiAxMDIwcHgpe1xuICAuYXNpZGV7XG4gICAgd2lkdGg6IDIyMHB4O1xuICAgIG1hcmdpbi1sZWZ0OiAyMHB4O1xuICB9XG59XG5cbkBtZWRpYSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDc2OHB4KXtcbiAgLmFzaWRle1xuICAgIGRpc3BsYXk6IG5vbmU7XG4gIH1cbn0iLCJAbWVkaWEgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA3NjhweCl7XG4gIC5wdWJsaWNhdGlvbntcbiAgICAmX190aXRsZXtcbiAgICAgIGZvbnQtc2l6ZTogMjhweDtcbiAgICB9XG4gIH1cbn1cblxuQG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDogNDIwcHgpe1xuICAucHVibGljYXRpb257XG4gICAgJl9fdGl0bGV7XG4gICAgICBmb250LXNpemU6IDIycHg7XG4gICAgfVxuICB9XG59IiwiQG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDogMTAyMHB4KXtcbiAgLmRlY2xhcmF0aW9ucy10b3B7XG4gICAgJl9fc3Vic2NyaXB0aW9ucy13cmFwe1xuICAgICAgZGlzcGxheTogbm9uZTtcbiAgICB9XG4gIH1cbn1cblxuQG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDogOTAwcHgpe1xuICAuZGVjbGFyYXRpb25ze1xuICAgICZfX2Rpc3BsYXktdmlld3tcbiAgICAgIGRpc3BsYXk6IG5vbmU7XG4gICAgfVxuICB9XG59XG5cbkBtZWRpYSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDg3MHB4KXtcbiAgLmRlY2xhcmF0aW9ue1xuICAgICZfX3RpdGxle1xuICAgICAgZm9udC1zaXplOiAxNHB4O1xuICAgICAgbGluZS1oZWlnaHQ6IDEuMztcbiAgICB9XG4gIH1cbn1cblxuQG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDogNzY4cHgpe1xuICAuZGVjbGFyYXRpb25zLXRvcHtcbiAgICAmX190aXRsZXtcbiAgICAgIGZvbnQtc2l6ZTogMjhweDtcbiAgICB9XG4gIH1cbn1cblxuQG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDogNTQwcHgpe1xuICAuZGVjbGFyYXRpb257XG4gICAgJi0tdGlsZXtcbiAgICAgIHdpZHRoOiB+J2NhbGMoNTAlIC0gN3B4KSc7XG4gICAgICBtYXgtd2lkdGg6IGluaXRpYWw7XG4gICAgfVxuICB9XG59XG5cbkBtZWRpYSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDQyMHB4KXtcbiAgLmRlY2xhcmF0aW9ucy10b3B7XG4gICAgJl9fdGl0bGV7XG4gICAgICBmb250LXNpemU6IDIycHg7XG4gICAgfVxuICB9XG59XG5cbkBtZWRpYSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDQwMHB4KXtcbiAgLmRlY2xhcmF0aW9ucy1saXN0e1xuICAgICYtLXRpbGV7XG4gICAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgICB9XG4gIH1cblxuICAuZGVjbGFyYXRpb257XG4gICAgJi0tdGlsZXtcbiAgICAgIHdpZHRoOiAxMDAlO1xuICAgICAgbWF4LXdpZHRoOiAyNjBweDtcbiAgICB9XG4gIH1cbn0iLCJAbWVkaWEgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiAxMDIwcHgpe1xuICAub2J5YXZsZW5pZXtcbiAgfVxufVxuXG5AbWVkaWEgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA4NDBweCl7XG4gIC5vYnlhdmxlbmllLWNvbnRyb2x7XG4gICAgJl9fbGlua3tcbiAgICAgIGZvbnQtc2l6ZTogMTJweDtcbiAgICB9XG4gIH1cbn1cblxuQG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDogNzY4cHgpe1xuICAub2J5YXZsZW5pZXtcbiAgICAmX19uYW1le1xuICAgICAgZm9udC1zaXplOiAyOHB4O1xuICAgIH1cbiAgfVxuXG4gIC5vYnlhdmxlbmllLWNvbnRyb2x7XG4gICAgZGlzcGxheTogbm9uZTtcbiAgfVxufVxuXG5AbWVkaWEgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA0MjBweCl7XG4gIC5vYnlhdmxlbmlle1xuICAgICZfX25hbWV7XG4gICAgICBmb250LXNpemU6IDIycHg7XG4gICAgfVxuICB9XG59XG4iLCJAbWVkaWEgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA3NjhweCl7XG4gIC5kaWFsb2dzLWl0ZW17XG4gICAgJl9fdGl0bGV7XG4gICAgICBmb250LXNpemU6IDE0cHg7XG4gICAgfVxuXG4gICAgJl9fbWVzc2FnZS1jb3VudHtcbiAgICAgIGZvbnQtc2l6ZTogMTJweDtcbiAgICB9XG5cbiAgICAmX19uZXctbWVzc2FnZS1jb3VudHtcbiAgICAgIHBhZGRpbmc6IDNweCA1cHg7XG4gICAgICBmb250LXNpemU6IDEwcHg7XG4gICAgfVxuICB9XG59IiwiQG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDogNTYwcHgpe1xuICAuZGlhbG9ne1xuICAgICZfX3RvcHtcbiAgICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW4tcmV2ZXJzZTtcbiAgICB9XG5cbiAgICAmX19sZWZ0e1xuICAgICAgbWFyZ2luLXRvcDogMTVweDtcbiAgICB9XG4gIH1cbn0iLCJAbWVkaWEgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA3NjhweCl7XG4gIC5jaGF0e1xuICAgIHBhZGRpbmc6IDE1cHggNXB4IDE1cHggMTBweDtcblxuICAgICZfX3dyYXBwZXJ7XG4gICAgICBwYWRkaW5nLXJpZ2h0OiAxNXB4O1xuICAgICAgcGFkZGluZy1sZWZ0OiAxMHB4O1xuICAgIH1cblxuICAgICZfX3RleHQtd3JhcHtcbiAgICAgIHdpZHRoOiA2MCU7XG4gICAgICBwYWRkaW5nOiAxMHB4IDE1cHg7XG4gICAgfVxuXG4gICAgJl9fdGV4dHtcbiAgICAgIGZvbnQtc2l6ZTogMTRweDtcbiAgICB9XG4gIH1cbn1cblxuQG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDogNTgwcHgpe1xuICAuY2hhdHtcbiAgICAmX190ZXh0LXdyYXB7XG4gICAgICB3aWR0aDogODAlO1xuICAgIH1cbiAgfVxufSIsIkBtZWRpYSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDU5MHB4KXtcbiAgLmJhbGFuY2V7XG4gICAgJl9faGlkZS1tYntcbiAgICAgIGRpc3BsYXk6IG5vbmU7XG4gICAgfVxuXG4gICAgJl9fdGl0bGUtd3JhcHtcbiAgICAgICYtLW51bXtcbiAgICAgICAgbWluLXdpZHRoOiA2MHB4O1xuICAgICAgfVxuXG4gICAgICAmLS1zdW17XG4gICAgICAgIG1pbi13aWR0aDogNzBweDtcbiAgICAgIH1cbiAgICB9XG5cbiAgICAmX19jb2x7XG4gICAgICAmLS1udW17XG4gICAgICAgIG1pbi13aWR0aDogNjBweDtcbiAgICAgIH1cblxuICAgICAgJi0tc3Vte1xuICAgICAgICBtaW4td2lkdGg6IDcwcHg7XG4gICAgICB9XG4gICAgfVxuICB9XG59IiwiQG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDogNzY4cHgpe1xuICAuc2V0dGluZ3N7XG4gICAgJl9fbmF2e1xuICAgICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgICAgIGZsZXgtd3JhcDogd3JhcDtcbiAgICAgIGFsaWduLWNvbnRlbnQ6IGZsZXgtc3RhcnQ7XG4gICAgICBoZWlnaHQ6IDgwcHg7XG4gICAgfVxuXG4gICAgJl9fbmF2LWl0ZW17XG4gICAgICB3aWR0aDogMzMlO1xuICAgICAgbWFyZ2luLWJvdHRvbTogNXB4O1xuXG4gICAgICAmOm50aC1jaGlsZChuKzIpe1xuICAgICAgICBtYXJnaW4tbGVmdDogMDtcbiAgICAgIH1cbiAgICB9XG4gIH1cbn1cblxuQG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDogNTIwcHgpe1xuICAuc2V0dGluZ3N7XG4gICAgJl9fbmF2e1xuICAgICAgaGVpZ2h0OiA4MHB4O1xuICAgIH1cblxuICAgICZfX25hdi1pdGVte1xuICAgICAgd2lkdGg6IDUwJTtcbiAgICAgIGZvbnQtc2l6ZTogMTRweDtcbiAgICB9XG4gIH1cbn0iLCJAbWVkaWEgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA3NjhweCl7XG4gIC5jb21tZW50c3tcbiAgICAmX190aXRsZXtcbiAgICAgIGZvbnQtc2l6ZTogMjhweDtcbiAgICB9XG4gIH1cblxuICAuY29tbWVudHtcbiAgICAmX19uYW1le1xuICAgICAgZm9udC1zaXplOiAxNHB4O1xuICAgIH1cblxuICAgICZfX3RleHR7XG4gICAgICBmb250LXNpemU6IDE0cHg7XG4gICAgfVxuICB9XG59XG5cbkBtZWRpYSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDU4MHB4KXtcbiAgLmNvbW1lbnRze1xuICB9XG5cbiAgLmFkZC1tZXNzYWdle1xuICAgICZfX2JvdHRvbS13cmFwe1xuICAgICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgICAgIGFsaWduLWl0ZW1zOiBmbGV4LXN0YXJ0O1xuICAgIH1cblxuICAgICZfX2luZm8tdGV4dHtcbiAgICAgIG1heC13aWR0aDogbm9uZTtcbiAgICB9XG5cbiAgICAmX19idXR0b24td3JhcHtcbiAgICAgIGFsaWduLXNlbGY6IGZsZXgtZW5kO1xuICAgICAgbWFyZ2luLXRvcDogMTVweDtcbiAgICB9XG4gIH1cbn1cblxuQG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDogNDIwcHgpe1xuICAuY29tbWVudHN7XG4gICAgJl9fdGl0bGV7XG4gICAgICBmb250LXNpemU6IDIycHg7XG4gICAgfVxuXG4gICAgJl9fYXV0aG9yaXphdGlvbi10ZXh0e1xuICAgICAgdGV4dC1hbGlnbjogY2VudGVyO1xuICAgIH1cbiAgfVxuXG4gIC5hZGQtbWVzc2FnZXtcbiAgICBwYWRkaW5nOiAxMHB4IDEwcHggMTVweDtcbiAgfVxufSIsIkBtZWRpYSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDEwMjBweCl7XG4gIC5say1oZWFkZXJ7XG4gICAgcGFkZGluZzogMzBweCAxNXB4IDA7XG4gIH1cbn1cblxuQG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDogOTQwcHgpe1xuICAubGstaGVhZGVye1xuICAgICZfX2luZm97XG4gICAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICAgICAgYWxpZ24taXRlbXM6IGZsZXgtc3RhcnQ7XG4gICAgfVxuXG4gICAgJl9fYmFsYW5jZS13cmFwe1xuICAgICAgbWFyZ2luLXRvcDogMTVweDtcbiAgICAgIHdpZHRoOiAyODBweDtcbiAgICB9XG5cbiAgICAmX19iYWxhbmNlLXRleHR7XG4gICAgICBtYXJnaW4tcmlnaHQ6IDI1cHg7XG4gICAgfVxuICB9XG59XG5cbkBtZWRpYSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDc2OHB4KXtcbiAgLmxrLWhlYWRlcntcbiAgICAmX190aXRsZXtcbiAgICAgIGZvbnQtc2l6ZTogMzJweDtcbiAgICB9XG5cbiAgICAmX19uYXYtbGlzdHtcbiAgICAgIG92ZXJmbG93OiBhdXRvO1xuICAgICAgb3ZlcmZsb3cteTogaGlkZGVuO1xuICAgICAgLXdlYmtpdC1vdmVyZmxvdy1zY3JvbGxpbmc6IHRvdWNoO1xuICAgIH1cblxuICAgICZfX25hdi1pdGVte1xuICAgICAgZm9udC1zaXplOiAxNHB4O1xuICAgIH1cblxuICAgICZfX25hdi1saW5re1xuICAgICAgcGFkZGluZzogMTBweDtcbiAgICB9XG5cbiAgICAmX19uYXYtYmFsYW5jZXtcbiAgICAgIGZvbnQtc2l6ZTogMTRweDtcbiAgICB9XG4gIH1cblxuICAubGt7XG4gICAgJl9fdGl0bGV7XG4gICAgICBmb250LXNpemU6IDI4cHg7XG4gICAgfVxuICB9XG59XG5cbkBtZWRpYSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDYyMHB4KXtcbiAgLmxrLWhlYWRlcntcbiAgICBwYWRkaW5nOiAzMHB4IDEwcHggMDtcbiAgfVxufVxuXG5AbWVkaWEgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA1MjBweCl7XG4gIC5iYW5uZXJze1xuICAgICZfX3RvcHtcbiAgICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gICAgICBhbGlnbi1pdGVtczogZmxleC1zdGFydDtcbiAgICB9XG5cbiAgICAmX19idG4td3JhcHtcbiAgICAgIG1hcmdpbi10b3A6IDEwcHg7XG4gICAgfVxuICB9XG59XG5cbkBtZWRpYSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDQyMHB4KXtcbiAgLmxrLWhlYWRlcntcbiAgICAmX190aXRsZXtcbiAgICAgIGZvbnQtc2l6ZTogMjZweDtcbiAgICB9XG4gIH1cblxuICAubGt7XG4gICAgJl9fdGl0bGV7XG4gICAgICBmb250LXNpemU6IDIycHg7XG4gICAgfVxuICB9XG59IiwiQG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDogNTkwcHgpIHtcbiAgLmltYWdlLWRvd25sb2FkLWJveHtcbiAgICAmX19saXN0LWl0ZW17XG4gICAgICAmOm50aC1jaGlsZChuKSB7XG4gICAgICAgIG1hcmdpbjogMDtcbiAgICAgIH1cblxuICAgICAgJjpudGgtY2hpbGQoMm4rMikge1xuICAgICAgICBtYXJnaW4tbGVmdDogMTBweDtcbiAgICAgIH1cblxuICAgICAgJjpudGgtbGFzdC1jaGlsZChuKzMpIHtcbiAgICAgICAgbWFyZ2luLWJvdHRvbTogMTBweDtcbiAgICAgIH1cbiAgICB9XG4gIH1cbn1cblxuQG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDogMzUwcHgpIHtcbiAgLmltZy1kb3dubG9hZHtcbiAgICAmX19idXR0b257XG4gICAgICB3aWR0aDogMTM1cHg7XG4gICAgICBoZWlnaHQ6IDkwcHg7XG4gICAgfVxuICB9XG59IiwiLypcbkBtZWRpYSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDk4MHB4KXtcbiAgLmlucHV0LXJvd3tcbiAgICAmX19sYWJlbHtcbiAgICAgIGxlZnQ6IDA7XG4gICAgICB0b3A6IC0yNXB4O1xuICAgICAgdGV4dC1hbGlnbjogbGVmdDtcbiAgICAgIG1heC13aWR0aDogMTAwJTtcbiAgICAgIHdpZHRoOiBhdXRvO1xuICAgIH1cbiAgfVxufSovXG5AbWVkaWEgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA5ODBweCl7XG4gIC5pbnB1dC1yb3d7XG4gICAgJl9fd3JhcHtcbiAgICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG5cbiAgICAgICYtLWJldHdlZW57XG4gICAgICAgIGZsZXgtZGlyZWN0aW9uOiByb3c7XG4gICAgICB9XG4gICAgfVxuXG4gICAgJl9fbmFtZXtcbiAgICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgIH1cblxuICAgICZfX2xhYmVse1xuICAgICAgcG9zaXRpb246IHN0YXRpYztcbiAgICAgIHRleHQtYWxpZ246IGxlZnQ7XG4gICAgICBtYXgtd2lkdGg6IDEwMCU7XG4gICAgICB3aWR0aDogYXV0bztcbiAgICAgIHBhZGRpbmctYm90dG9tOiAzcHg7XG4gICAgfVxuXG4gICAgJl9fd2FybmluZy10ZXh0e1xuICAgICAgZGlzcGxheTogYmxvY2s7XG4gICAgICBwb3NpdGlvbjogc3RhdGljO1xuICAgICAgdHJhbnNmb3JtOiBub25lO1xuICAgIH1cblxuICAgICZfX2NsYXJpZmljYXRpb257XG4gICAgICBwb3NpdGlvbjogc3RhdGljO1xuICAgICAgdHJhbnNmb3JtOiBub25lO1xuICAgICAgbWFyZ2luOiA1cHggMCAwO1xuICAgICAgbWluLWhlaWdodDogMDtcbiAgICB9XG5cbiAgICAmX19kZXNjcmlwdGlvbntcbiAgICAgIG1heC13aWR0aDogbm9uZTtcbiAgICB9XG4gIH1cbn1cblxuQG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDogNzAwcHgpIHtcbiAgLmZvcm0tcm93c3tcbiAgICBtYXJnaW4tbGVmdDogMTAlO1xuICAgIG1hcmdpbi1yaWdodDogNyU7XG4gIH1cbn1cblxuQG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDogNDIwcHgpIHtcbiAgLmZvcm0tcm93c3tcbiAgICBtYXJnaW4tbGVmdDogMTBweDtcbiAgICBtYXJnaW4tcmlnaHQ6IDEwcHg7XG4gIH1cbn0iLCJAbWVkaWEgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA5ODBweCl7XG4gIC8vLmFkZC1hZHZlcnR7XG4gIC8vICAmX19mb3Jte1xuICAvLyAgICBtYXJnaW4tdG9wOiA1MHB4O1xuICAvLyAgfVxuICAvL31cblxuICAuZm9ybS1yb3dze1xuICAgIC8vbWFyZ2luLWxlZnQ6IH4nY2FsYyg1MCUgLSAyNjBweCknO1xuXG4gICAgJl9faW5wdXQtcm93e1xuICAgICAgJjpudGgtY2hpbGQobisyKXtcbiAgICAgICAgbWFyZ2luLXRvcDogMTVweDtcbiAgICAgIH1cblxuICAgICAgJi0tYmlnLWluZGVudDpudGgtY2hpbGQobil7XG4gICAgICAgIG1hcmdpbi10b3A6IDI1cHg7XG4gICAgICB9XG4gICAgfVxuICB9XG5cbiAgLnN1Yy1pbnB1dHtcbiAgICBoZWlnaHQ6IDEwcHg7XG4gICAgdG9wOiA0cHg7XG4gIH1cbn1cblxuQG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDogNDIwcHgpe1xuICAuc3VjLWlucHV0e1xuICAgIGxlZnQ6IC0xNXB4O1xuICB9XG59XG5cbkBtZWRpYSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDM2MHB4KXtcbiAgI3JjLWltYWdlc2VsZWN0LCAuZy1yZWNhcHRjaGEge1xuICAgIHRyYW5zZm9ybTogc2NhbGUoMC45MSk7XG4gIH1cbn1cbiIsIkBtZWRpYSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDc2OHB4KXtcbiAgLmxpa2UtcHVibGljYXRpb25ze1xuICAgICZfX25hbWV7XG4gICAgICBmb250LXNpemU6IDE2cHg7XG4gICAgfVxuXG4gICAgJl9fc21hbGwtZGVzY3J7XG4gICAgICBtYXJnaW4tdG9wOiAxMHB4O1xuICAgIH1cblxuICAgICZfX3RhZ3Mtcm93e1xuICAgICAgbWFyZ2luLXRvcDogNXB4O1xuICAgIH1cbiAgfVxufVxuXG5AbWVkaWEgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA2NjBweCl7XG4gIC5saWtlLXB1YmxpY2F0aW9uc3tcbiAgICAmX19saXN0e1xuICAgICAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xuICAgIH1cblxuICAgICZfX2l0ZW17XG4gICAgICB3aWR0aDogNDclO1xuICAgICAgbWFyZ2luLWxlZnQ6IDA7XG5cbiAgICAgICY6bnRoLWNoaWxkKG4rMyl7XG4gICAgICAgIG1hcmdpbi10b3A6IDMwcHg7XG4gICAgICB9XG4gICAgfVxuICB9XG59XG5cbkBtZWRpYSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDQyMHB4KXtcbiAgLmxpa2UtcHVibGljYXRpb25ze1xuICAgICZfX2xpc3R7XG4gICAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgICB9XG5cbiAgICAmX19pdGVte1xuICAgICAgd2lkdGg6IDEwMCU7XG4gICAgICBtYXJnaW4tbGVmdDogMDtcblxuICAgICAgJjpudGgtY2hpbGQobisyKXtcbiAgICAgICAgbWFyZ2luLXRvcDogMzBweDtcbiAgICAgIH1cbiAgICB9XG4gIH1cbn0iLCJAbWVkaWEgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA3NjhweCl7XG4gIC5wYWdpbmF0aW9ue1xuICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG5cbiAgICAmX19uYXZ7XG4gICAgICBtYXJnaW46IDEwcHggMCAwO1xuICAgIH1cblxuICAgICZfX2xpbmt7XG4gICAgICBmb250LXNpemU6IDIwcHg7XG4gICAgfVxuXG4gICAgJl9fbGluay1kZWxpbWl0ZXJ7XG4gICAgICBmb250LXNpemU6IDIwcHg7XG4gICAgfVxuICB9XG59XG5cbkBtZWRpYSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDQyMHB4KXtcbiAgLnBhZ2luYXRpb257XG4gICAgJl9fYnV0dG9ucy1pdGVte1xuICAgICAgJjpudGgtY2hpbGQobisyKXtcbiAgICAgICAgbWFyZ2luLWxlZnQ6IDNweDtcbiAgICAgIH1cbiAgICB9XG5cbiAgICAmX19idXR0b24tbGlua3tcbiAgICAgIGhlaWdodDogMzBweDtcbiAgICAgIHdpZHRoOiAzMHB4O1xuICAgICAgcGFkZGluZzogOHB4IDA7XG4gICAgICBmb250LXNpemU6IDEycHg7XG4gICAgfVxuICB9XG59IiwiQG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDogMTAyMHB4KXtcbiAgLmJyZWFkY3J1bWJze1xuICAgIHBhZGRpbmc6IDIwcHggMTVweCAwO1xuICB9XG59XG5cbkBtZWRpYSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDYyMHB4KXtcbiAgLmJyZWFkY3J1bWJze1xuICAgIHBhZGRpbmc6IDIwcHggMTBweCAwO1xuICB9XG59Il19 */
